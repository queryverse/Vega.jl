var documenterSearchIndex = {"docs":
[{"location":"userguide/vega/#Using-Vega-1","page":"Using Vega","title":"Using Vega","text":"","category":"section"},{"location":"userguide/vega/#","page":"Using Vega","title":"Using Vega","text":"A Vega plot specification is represented as a VGSpec object in Julia. There are multiple ways to create a VGSpec object:","category":"page"},{"location":"userguide/vega/#","page":"Using Vega","title":"Using Vega","text":"The @vgplot macro is the main way to create VGSpec instances in code.\nUsing the vg string macro, you can write Vega specifications as JSON in your Julia code.\nYou can load Vega specifications from disc with the load function.","category":"page"},{"location":"userguide/vega/#","page":"Using Vega","title":"Using Vega","text":"There are two main things one can do with a VGSpec object:","category":"page"},{"location":"userguide/vega/#","page":"Using Vega","title":"Using Vega","text":"One can display it in various front ends.\nOne can save the plot to disc in various formats using the save function.","category":"page"},{"location":"userguide/vega/#","page":"Using Vega","title":"Using Vega","text":"This section will give a brief overview of these options.","category":"page"},{"location":"userguide/vega/#The-@vgplot-macro-1","page":"Using Vega","title":"The @vgplot macro","text":"","category":"section"},{"location":"userguide/vega/#","page":"Using Vega","title":"Using Vega","text":"The @vgplot macro is the main way to specify Vega plots in Vega.jl. The macro uses a syntax that is closely aligned with the JSON format of the original Vega specification. It is very simple to take a Vega specification and \"translate\" it into a corresponding @vgplot macro call.","category":"page"},{"location":"userguide/vega/#","page":"Using Vega","title":"Using Vega","text":"A typical Vega JSON specification looks like this:","category":"page"},{"location":"userguide/vega/#","page":"Using Vega","title":"Using Vega","text":"{\n  \"width\": 400,\n  \"height\": 200,\n  \"padding\": 5,\n\n  \"data\": [\n    {\n      \"name\": \"table\",\n      \"values\": [\n        {\"category\": \"A\", \"amount\": 28},\n        {\"category\": \"B\", \"amount\": 55},\n        {\"category\": \"C\", \"amount\": 43},\n        {\"category\": \"D\", \"amount\": 91},\n        {\"category\": \"E\", \"amount\": 81},\n        {\"category\": \"F\", \"amount\": 53},\n        {\"category\": \"G\", \"amount\": 19},\n        {\"category\": \"H\", \"amount\": 87}\n      ]\n    }\n  ],\n\n  \"signals\": [\n    {\n      \"name\": \"tooltip\",\n      \"value\": {},\n      \"on\": [\n        {\"events\": \"rect:mouseover\", \"update\": \"datum\"},\n        {\"events\": \"rect:mouseout\",  \"update\": \"{}\"}\n      ]\n    }\n  ],\n\n  \"scales\": [\n    {\n      \"name\": \"xscale\",\n      \"type\": \"band\",\n      \"domain\": {\"data\": \"table\", \"field\": \"category\"},\n      \"range\": \"width\",\n      \"padding\": 0.05,\n      \"round\": true\n    },\n    {\n      \"name\": \"yscale\",\n      \"domain\": {\"data\": \"table\", \"field\": \"amount\"},\n      \"nice\": true,\n      \"range\": \"height\"\n    }\n  ],\n\n  \"axes\": [\n    { \"orient\": \"bottom\", \"scale\": \"xscale\" },\n    { \"orient\": \"left\", \"scale\": \"yscale\" }\n  ],\n\n  \"marks\": [\n    {\n      \"type\": \"rect\",\n      \"from\": {\"data\":\"table\"},\n      \"encode\": {\n        \"enter\": {\n          \"x\": {\"scale\": \"xscale\", \"field\": \"category\"},\n          \"width\": {\"scale\": \"xscale\", \"band\": 1},\n          \"y\": {\"scale\": \"yscale\", \"field\": \"amount\"},\n          \"y2\": {\"scale\": \"yscale\", \"value\": 0}\n        },\n        \"update\": {\n          \"fill\": {\"value\": \"steelblue\"}\n        },\n        \"hover\": {\n          \"fill\": {\"value\": \"red\"}\n        }\n      }\n    },\n    {\n      \"type\": \"text\",\n      \"encode\": {\n        \"enter\": {\n          \"align\": {\"value\": \"center\"},\n          \"baseline\": {\"value\": \"bottom\"},\n          \"fill\": {\"value\": \"#333\"}\n        },\n        \"update\": {\n          \"x\": {\"scale\": \"xscale\", \"signal\": \"tooltip.category\", \"band\": 0.5},\n          \"y\": {\"scale\": \"yscale\", \"signal\": \"tooltip.amount\", \"offset\": -2},\n          \"text\": {\"signal\": \"tooltip.amount\"},\n          \"fillOpacity\": [\n            {\"test\": \"datum === tooltip\", \"value\": 0},\n            {\"value\": 1}\n          ]\n        }\n      }\n    }\n  ]\n}","category":"page"},{"location":"userguide/vega/#","page":"Using Vega","title":"Using Vega","text":"This can be directly translated into the following @vgplot macro call:","category":"page"},{"location":"userguide/vega/#","page":"Using Vega","title":"Using Vega","text":"using Vega\n\n@vgplot(\n    height=200,\n    padding=5,\n    marks=[\n        {\n            encode={\n                update={\n                    fill={\n                        value=\"steelblue\"\n                    }\n                },\n                hover={\n                    fill={\n                        value=\"red\"\n                    }\n                },\n                enter={\n                    x={\n                        field=\"category\",\n                        scale=\"xscale\"\n                    },\n                    y2={\n                        value=0,\n                        scale=\"yscale\"\n                    },\n                    width={\n                        scale=\"xscale\",\n                        band=1\n                    },\n                    y={\n                        field=\"amount\",\n                        scale=\"yscale\"\n                    }\n                }\n            },\n            from={\n                data=\"table\"\n            },\n            type=\"rect\"\n        },\n        {\n            encode={\n                update={\n                    x={\n                        signal=\"tooltip.category\",\n                        scale=\"xscale\",\n                        band=0.5\n                    },\n                    fillOpacity=[\n                        {\n                            test=\"datum === tooltip\",\n                            value=0\n                        },\n                        {\n                            value=1\n                        }\n                    ],\n                    text={\n                        signal=\"tooltip.amount\"\n                    },\n                    y={\n                        offset=-2,\n                        signal=\"tooltip.amount\",\n                        scale=\"yscale\"\n                    }\n                },\n                enter={\n                    fill={\n                        value=\"#333\"\n                    },\n                    baseline={\n                        value=\"bottom\"\n                    },\n                    align={\n                        value=\"center\"\n                    }\n                }\n            },\n            type=\"text\"\n        }\n    ],\n    axes=[\n        {\n            scale=\"xscale\",\n            orient=\"bottom\"\n        },\n        {\n            scale=\"yscale\",\n            orient=\"left\"\n        }\n    ],\n    data=[\n        {\n            name=\"table\",\n            values=[\n                {\n                    amount=28,\n                    category=\"A\"\n                },\n                {\n                    amount=55,\n                    category=\"B\"\n                },\n                {\n                    amount=43,\n                    category=\"C\"\n                },\n                {\n                    amount=91,\n                    category=\"D\"\n                },\n                {\n                    amount=81,\n                    category=\"E\"\n                },\n                {\n                    amount=53,\n                    category=\"F\"\n                },\n                {\n                    amount=19,\n                    category=\"G\"\n                },\n                {\n                    amount=87,\n                    category=\"H\"\n                }\n            ]\n        }\n    ],\n    scales=[\n        {\n            name=\"xscale\",\n            padding=0.05,\n            range=\"width\",\n            domain={\n                data=\"table\",\n                field=\"category\"\n            },\n            type=\"band\",\n            round=true\n        },\n        {\n            name=\"yscale\",\n            nice=true,\n            range=\"height\",\n            domain={\n                data=\"table\",\n                field=\"amount\"\n            }\n        }\n    ],\n    width=400,\n    signals=[\n        {\n            name=\"tooltip\",\n            on=[\n                {\n                    events=\"rect:mouseover\",\n                    update=\"datum\"\n                },\n                {\n                    events=\"rect:mouseout\",\n                    update=\"{}\"\n                }\n            ],\n            value={\n\n            }\n        }\n    ]\n)","category":"page"},{"location":"userguide/vega/#","page":"Using Vega","title":"Using Vega","text":"The main difference between JSON and the @vgplot macro is that keys are not surrounded by quotation marks in the macro, and key-value pairs are separate by a = (instead of a :).","category":"page"},{"location":"userguide/vega/#The-vg-string-macro-1","page":"Using Vega","title":"The vg string macro","text":"","category":"section"},{"location":"userguide/vega/#","page":"Using Vega","title":"Using Vega","text":"Similar to the vl string macro, the vg string macro takes the Vega spec as a JSON string and returns and renders a VGSpec.","category":"page"},{"location":"userguide/vega/#","page":"Using Vega","title":"Using Vega","text":"using Vega\n\nspec = vg\"\"\"\n  {\n  \"width\": 400,\n  \"height\": 200,\n  \"padding\": 5,\n\n  \"data\": [\n    {\n      \"name\": \"table\",\n      \"values\": [\n        {\"category\": \"A\", \"amount\": 28},\n        {\"category\": \"B\", \"amount\": 55},\n        {\"category\": \"C\", \"amount\": 43},\n        {\"category\": \"D\", \"amount\": 91},\n        {\"category\": \"E\", \"amount\": 81},\n        {\"category\": \"F\", \"amount\": 53},\n        {\"category\": \"G\", \"amount\": 19},\n        {\"category\": \"H\", \"amount\": 87}\n      ]\n    }\n  ],\n\n  \"signals\": [\n    {\n      \"name\": \"tooltip\",\n      \"value\": {},\n      \"on\": [\n        {\"events\": \"rect:mouseover\", \"update\": \"datum\"},\n        {\"events\": \"rect:mouseout\",  \"update\": \"{}\"}\n      ]\n    }\n  ],\n\n  \"scales\": [\n    {\n      \"name\": \"xscale\",\n      \"type\": \"band\",\n      \"domain\": {\"data\": \"table\", \"field\": \"category\"},\n      \"range\": \"width\",\n      \"padding\": 0.05,\n      \"round\": true\n    },\n    {\n      \"name\": \"yscale\",\n      \"domain\": {\"data\": \"table\", \"field\": \"amount\"},\n      \"nice\": true,\n      \"range\": \"height\"\n    }\n  ],\n\n  \"axes\": [\n    { \"orient\": \"bottom\", \"scale\": \"xscale\" },\n    { \"orient\": \"left\", \"scale\": \"yscale\" }\n  ],\n\n  \"marks\": [\n    {\n      \"type\": \"rect\",\n      \"from\": {\"data\":\"table\"},\n      \"encode\": {\n        \"enter\": {\n          \"x\": {\"scale\": \"xscale\", \"field\": \"category\"},\n          \"width\": {\"scale\": \"xscale\", \"band\": 1},\n          \"y\": {\"scale\": \"yscale\", \"field\": \"amount\"},\n          \"y2\": {\"scale\": \"yscale\", \"value\": 0}\n        },\n        \"update\": {\n          \"fill\": {\"value\": \"steelblue\"}\n        },\n        \"hover\": {\n          \"fill\": {\"value\": \"red\"}\n        }\n      }\n    },\n    {\n      \"type\": \"text\",\n      \"encode\": {\n        \"enter\": {\n          \"align\": {\"value\": \"center\"},\n          \"baseline\": {\"value\": \"bottom\"},\n          \"fill\": {\"value\": \"#333\"}\n        },\n        \"update\": {\n          \"x\": {\"scale\": \"xscale\", \"signal\": \"tooltip.category\", \"band\": 0.5},\n          \"y\": {\"scale\": \"yscale\", \"signal\": \"tooltip.amount\", \"offset\": -2},\n          \"text\": {\"signal\": \"tooltip.amount\"},\n          \"fillOpacity\": [\n            {\"test\": \"datum === tooltip\", \"value\": 0},\n            {\"value\": 1}\n          ]\n        }\n      }\n    }\n  ]\n  }\n\"\"\"","category":"page"},{"location":"userguide/vega/#Data-1","page":"Using Vega","title":"Data","text":"","category":"section"},{"location":"userguide/vega/#","page":"Using Vega","title":"Using Vega","text":"The easiest way to pass data into a Vega spec is to use the @vgplot macro, and assign the data to the data element. There are various options:","category":"page"},{"location":"userguide/vega/#","page":"Using Vega","title":"Using Vega","text":"You can pass a Pair as an element in the data vector, where the key is the name of the data source and the value any iterable table.\nYou can also assign any iterable table to the value field inside a composite object in the data vector.","category":"page"},{"location":"userguide/vega/#","page":"Using Vega","title":"Using Vega","text":"The first option looks like this:","category":"page"},{"location":"userguide/vega/#","page":"Using Vega","title":"Using Vega","text":"...,\ndata = [:my_datasource_name=>mydataframe],\n...","category":"page"},{"location":"userguide/vega/#","page":"Using Vega","title":"Using Vega","text":"The second option looks like this:","category":"page"},{"location":"userguide/vega/#","page":"Using Vega","title":"Using Vega","text":"...,\ndata = [\n  {\n    name=:my_datasource,\n    values=mydataframe\n  }\n],\n...","category":"page"},{"location":"userguide/vega/#","page":"Using Vega","title":"Using Vega","text":"A full example of a Vega plot that uses the first option looks like this:","category":"page"},{"location":"userguide/vega/#","page":"Using Vega","title":"Using Vega","text":"using Vega, VegaDatasets\n\n@vgplot(\n    height=200,\n    width=200,\n    padding=5,    \n    data=[:source=>dataset(\"cars\")],    \n    marks=[{\n        name=\"marks\",\n        encode={\n            update={\n                shape={value=\"circle\"},\n                x={field=\"Horsepower\", scale=\"x\"},\n                y={field=\"Miles_per_Gallon\", scale=\"y\"}\n            }\n        },\n        from={data=\"source\"},\n        type=\"symbol\"\n    }],\n    axes=[\n        {\n            domain=false,\n            tickCount=5,\n            grid=true,\n            title=\"Horsepower\",\n            scale=\"x\",\n            orient=\"bottom\"\n        },\n        {\n            domain=false,\n            grid=true,\n            titlePadding=5,\n            title=\"Miles_per_Gallon\",\n            scale=\"y\",\n            orient=\"left\"\n        }\n    ],    \n    scales=[\n        {\n            name=\"x\",\n            nice=true,\n            zero=true,\n            range=\"width\",\n            domain={data=\"source\",field=\"Horsepower\"},\n            type=\"linear\",\n            round=true\n        },\n        {\n            name=\"y\",\n            nice=true,\n            zero=true,\n            range=\"height\",\n            domain={data=\"source\",field=\"Miles_per_Gallon\"},\n            type=\"linear\",\n            round=true\n        }\n    ]\n)","category":"page"},{"location":"userguide/vega/#Loading-and-saving-Vega-specifications-1","page":"Using Vega","title":"Loading and saving Vega specifications","text":"","category":"section"},{"location":"userguide/vega/#","page":"Using Vega","title":"Using Vega","text":"The load and save functions can be used to load and save vega specifications to and from disc. The following example loads a vega specification from a file named myfigure.vega:","category":"page"},{"location":"userguide/vega/#","page":"Using Vega","title":"Using Vega","text":"using Vega\n\nspec = load(\"myfigure.vega\")","category":"page"},{"location":"userguide/vega/#","page":"Using Vega","title":"Using Vega","text":"To save a VGSpec to a file on disc, use the save function:","category":"page"},{"location":"userguide/vega/#","page":"Using Vega","title":"Using Vega","text":"using Vega\n\nspec = ... # Aquire a spec from somewhere\n\nspec |> save(\"myfigure.vega\")","category":"page"},{"location":"examples/examples_vega_line_area_charts/#Line-and-Area-Charts-1","page":"Line & Area Charts","title":"Line & Area Charts","text":"","category":"section"},{"location":"examples/examples_vega_line_area_charts/#Line-Chart-1","page":"Line & Area Charts","title":"Line Chart","text":"","category":"section"},{"location":"examples/examples_vega_line_area_charts/#","page":"Line & Area Charts","title":"Line & Area Charts","text":"using Vega\n\n@vgplot(\n    height=200,\n    padding=5,\n    marks=[\n        {\n            marks=[\n                {\n                    encode={\n                        update={\n                            interpolate={\n                                signal=\"interpolate\"\n                            },\n                            fillOpacity={\n                                value=1\n                            }\n                        },\n                        hover={\n                            fillOpacity={\n                                value=0.5\n                            }\n                        },\n                        enter={\n                            stroke={\n                                field=\"c\",\n                                scale=\"color\"\n                            },\n                            x={\n                                field=\"x\",\n                                scale=\"x\"\n                            },\n                            strokeWidth={\n                                value=2\n                            },\n                            y={\n                                field=\"y\",\n                                scale=\"y\"\n                            }\n                        }\n                    },\n                    from={\n                        data=\"series\"\n                    },\n                    type=\"line\"\n                }\n            ],\n            from={\n                facet={\n                    name=\"series\",\n                    data=\"table\",\n                    groupby=\"c\"\n                }\n            },\n            type=\"group\"\n        }\n    ],\n    axes=[\n        {\n            scale=\"x\",\n            orient=\"bottom\"\n        },\n        {\n            scale=\"y\",\n            orient=\"left\"\n        }\n    ],\n    data=[\n        {\n            name=\"table\",\n            values=[\n                {\n                    c=0,\n                    x=0,\n                    y=28\n                },\n                {\n                    c=1,\n                    x=0,\n                    y=20\n                },\n                {\n                    c=0,\n                    x=1,\n                    y=43\n                },\n                {\n                    c=1,\n                    x=1,\n                    y=35\n                },\n                {\n                    c=0,\n                    x=2,\n                    y=81\n                },\n                {\n                    c=1,\n                    x=2,\n                    y=10\n                },\n                {\n                    c=0,\n                    x=3,\n                    y=19\n                },\n                {\n                    c=1,\n                    x=3,\n                    y=15\n                },\n                {\n                    c=0,\n                    x=4,\n                    y=52\n                },\n                {\n                    c=1,\n                    x=4,\n                    y=48\n                },\n                {\n                    c=0,\n                    x=5,\n                    y=24\n                },\n                {\n                    c=1,\n                    x=5,\n                    y=28\n                },\n                {\n                    c=0,\n                    x=6,\n                    y=87\n                },\n                {\n                    c=1,\n                    x=6,\n                    y=66\n                },\n                {\n                    c=0,\n                    x=7,\n                    y=17\n                },\n                {\n                    c=1,\n                    x=7,\n                    y=27\n                },\n                {\n                    c=0,\n                    x=8,\n                    y=68\n                },\n                {\n                    c=1,\n                    x=8,\n                    y=16\n                },\n                {\n                    c=0,\n                    x=9,\n                    y=49\n                },\n                {\n                    c=1,\n                    x=9,\n                    y=25\n                }\n            ]\n        }\n    ],\n    scales=[\n        {\n            name=\"x\",\n            range=\"width\",\n            domain={\n                data=\"table\",\n                field=\"x\"\n            },\n            type=\"point\"\n        },\n        {\n            name=\"y\",\n            nice=true,\n            zero=true,\n            range=\"height\",\n            domain={\n                data=\"table\",\n                field=\"y\"\n            },\n            type=\"linear\"\n        },\n        {\n            name=\"color\",\n            range=\"category\",\n            domain={\n                data=\"table\",\n                field=\"c\"\n            },\n            type=\"ordinal\"\n        }\n    ],\n    width=500,\n    signals=[\n        {\n            name=\"interpolate\",\n            bind={\n                options=[\n                    \"basis\",\n                    \"cardinal\",\n                    \"catmull-rom\",\n                    \"linear\",\n                    \"monotone\",\n                    \"natural\",\n                    \"step\",\n                    \"step-after\",\n                    \"step-before\"\n                ],\n                input=\"select\"\n            },\n            value=\"linear\"\n        }\n    ]\n)","category":"page"},{"location":"examples/examples_vega_line_area_charts/#Area-Chart-1","page":"Line & Area Charts","title":"Area Chart","text":"","category":"section"},{"location":"examples/examples_vega_line_area_charts/#","page":"Line & Area Charts","title":"Line & Area Charts","text":"using Vega\n\n@vgplot(\n    height=200,\n    padding=5,\n    marks=[\n        {\n            encode={\n                update={\n                    interpolate={\n                        signal=\"interpolate\"\n                    },\n                    fillOpacity={\n                        value=1\n                    }\n                },\n                hover={\n                    fillOpacity={\n                        value=0.5\n                    }\n                },\n                enter={\n                    x={\n                        field=\"u\",\n                        scale=\"xscale\"\n                    },\n                    y2={\n                        value=0,\n                        scale=\"yscale\"\n                    },\n                    fill={\n                        value=\"steelblue\"\n                    },\n                    y={\n                        field=\"v\",\n                        scale=\"yscale\"\n                    }\n                }\n            },\n            from={\n                data=\"table\"\n            },\n            type=\"area\"\n        }\n    ],\n    axes=[\n        {\n            tickCount=20,\n            scale=\"xscale\",\n            orient=\"bottom\"\n        },\n        {\n            scale=\"yscale\",\n            orient=\"left\"\n        }\n    ],\n    data=[\n        {\n            name=\"table\",\n            values=[\n                {\n                    v=28,\n                    u=1\n                },\n                {\n                    v=55,\n                    u=2\n                },\n                {\n                    v=43,\n                    u=3\n                },\n                {\n                    v=91,\n                    u=4\n                },\n                {\n                    v=81,\n                    u=5\n                },\n                {\n                    v=53,\n                    u=6\n                },\n                {\n                    v=19,\n                    u=7\n                },\n                {\n                    v=87,\n                    u=8\n                },\n                {\n                    v=52,\n                    u=9\n                },\n                {\n                    v=48,\n                    u=10\n                },\n                {\n                    v=24,\n                    u=11\n                },\n                {\n                    v=49,\n                    u=12\n                },\n                {\n                    v=87,\n                    u=13\n                },\n                {\n                    v=66,\n                    u=14\n                },\n                {\n                    v=17,\n                    u=15\n                },\n                {\n                    v=27,\n                    u=16\n                },\n                {\n                    v=68,\n                    u=17\n                },\n                {\n                    v=16,\n                    u=18\n                },\n                {\n                    v=49,\n                    u=19\n                },\n                {\n                    v=15,\n                    u=20\n                }\n            ]\n        }\n    ],\n    scales=[\n        {\n            name=\"xscale\",\n            zero=false,\n            range=\"width\",\n            domain={\n                data=\"table\",\n                field=\"u\"\n            },\n            type=\"linear\"\n        },\n        {\n            name=\"yscale\",\n            nice=true,\n            zero=true,\n            range=\"height\",\n            domain={\n                data=\"table\",\n                field=\"v\"\n            },\n            type=\"linear\"\n        }\n    ],\n    width=500,\n    signals=[\n        {\n            name=\"interpolate\",\n            bind={\n                options=[\n                    \"basis\",\n                    \"cardinal\",\n                    \"catmull-rom\",\n                    \"linear\",\n                    \"monotone\",\n                    \"natural\",\n                    \"step\",\n                    \"step-after\",\n                    \"step-before\"\n                ],\n                input=\"select\"\n            },\n            value=\"monotone\"\n        }\n    ]\n)","category":"page"},{"location":"examples/examples_vega_line_area_charts/#Stacked-Area-Chart-1","page":"Line & Area Charts","title":"Stacked Area Chart","text":"","category":"section"},{"location":"examples/examples_vega_line_area_charts/#","page":"Line & Area Charts","title":"Line & Area Charts","text":"using Vega\n\n@vgplot(\n    height=200,\n    padding=5,\n    marks=[\n        {\n            marks=[\n                {\n                    encode={\n                        update={\n                            fillOpacity={\n                                value=1\n                            }\n                        },\n                        hover={\n                            fillOpacity={\n                                value=0.5\n                            }\n                        },\n                        enter={\n                            interpolate={\n                                value=\"monotone\"\n                            },\n                            x={\n                                field=\"x\",\n                                scale=\"x\"\n                            },\n                            y2={\n                                field=\"y1\",\n                                scale=\"y\"\n                            },\n                            fill={\n                                field=\"c\",\n                                scale=\"color\"\n                            },\n                            y={\n                                field=\"y0\",\n                                scale=\"y\"\n                            }\n                        }\n                    },\n                    from={\n                        data=\"series\"\n                    },\n                    type=\"area\"\n                }\n            ],\n            from={\n                facet={\n                    name=\"series\",\n                    data=\"table\",\n                    groupby=\"c\"\n                }\n            },\n            type=\"group\"\n        }\n    ],\n    axes=[\n        {\n            zindex=1,\n            scale=\"x\",\n            orient=\"bottom\"\n        },\n        {\n            zindex=1,\n            scale=\"y\",\n            orient=\"left\"\n        }\n    ],\n    data=[\n        {\n            name=\"table\",\n            values=[\n                {\n                    c=0,\n                    x=0,\n                    y=28\n                },\n                {\n                    c=1,\n                    x=0,\n                    y=55\n                },\n                {\n                    c=0,\n                    x=1,\n                    y=43\n                },\n                {\n                    c=1,\n                    x=1,\n                    y=91\n                },\n                {\n                    c=0,\n                    x=2,\n                    y=81\n                },\n                {\n                    c=1,\n                    x=2,\n                    y=53\n                },\n                {\n                    c=0,\n                    x=3,\n                    y=19\n                },\n                {\n                    c=1,\n                    x=3,\n                    y=87\n                },\n                {\n                    c=0,\n                    x=4,\n                    y=52\n                },\n                {\n                    c=1,\n                    x=4,\n                    y=48\n                },\n                {\n                    c=0,\n                    x=5,\n                    y=24\n                },\n                {\n                    c=1,\n                    x=5,\n                    y=49\n                },\n                {\n                    c=0,\n                    x=6,\n                    y=87\n                },\n                {\n                    c=1,\n                    x=6,\n                    y=66\n                },\n                {\n                    c=0,\n                    x=7,\n                    y=17\n                },\n                {\n                    c=1,\n                    x=7,\n                    y=27\n                },\n                {\n                    c=0,\n                    x=8,\n                    y=68\n                },\n                {\n                    c=1,\n                    x=8,\n                    y=16\n                },\n                {\n                    c=0,\n                    x=9,\n                    y=49\n                },\n                {\n                    c=1,\n                    x=9,\n                    y=15\n                }\n            ],\n            transform=[\n                {\n                    sort={\n                        field=\"c\"\n                    },\n                    field=\"y\",\n                    groupby=[\n                        \"x\"\n                    ],\n                    type=\"stack\"\n                }\n            ]\n        }\n    ],\n    scales=[\n        {\n            name=\"x\",\n            range=\"width\",\n            domain={\n                data=\"table\",\n                field=\"x\"\n            },\n            type=\"point\"\n        },\n        {\n            name=\"y\",\n            nice=true,\n            zero=true,\n            range=\"height\",\n            domain={\n                data=\"table\",\n                field=\"y1\"\n            },\n            type=\"linear\"\n        },\n        {\n            name=\"color\",\n            range=\"category\",\n            domain={\n                data=\"table\",\n                field=\"c\"\n            },\n            type=\"ordinal\"\n        }\n    ],\n    width=500\n)","category":"page"},{"location":"examples/examples_vega_line_area_charts/#Horizon-Graph-1","page":"Line & Area Charts","title":"Horizon Graph","text":"","category":"section"},{"location":"examples/examples_vega_line_area_charts/#","page":"Line & Area Charts","title":"Line & Area Charts","text":"using Vega\n\n@vgplot(\n    height=100,\n    marks=[\n        {\n            marks=[\n                {\n                    marks=[\n                        {\n                            encode={\n                                update={\n                                    y2={\n                                        value=0,\n                                        scale=\"y\"\n                                    },\n                                    fillOpacity={\n                                        signal=\"opacity\"\n                                    },\n                                    y={\n                                        field=\"y\",\n                                        scale=\"y\"\n                                    }\n                                },\n                                enter={\n                                    interpolate={\n                                        value=\"monotone\"\n                                    },\n                                    x={\n                                        field=\"x\",\n                                        scale=\"x\"\n                                    },\n                                    fill={\n                                        value=\"steelblue\"\n                                    }\n                                }\n                            },\n                            from={\n                                data=\"table\"\n                            },\n                            type=\"area\"\n                        }\n                    ],\n                    encode={\n                        update={\n                            y={\n                                field=\"offset\"\n                            }\n                        }\n                    },\n                    from={\n                        data=\"layer_indices\"\n                    },\n                    type=\"group\"\n                }\n            ],\n            encode={\n                update={\n                    height={\n                        field={\n                            group=\"height\"\n                        }\n                    },\n                    clip={\n                        value=true\n                    },\n                    width={\n                        field={\n                            group=\"width\"\n                        }\n                    }\n                }\n            },\n            type=\"group\"\n        }\n    ],\n    axes=[\n        {\n            tickCount=20,\n            scale=\"x\",\n            orient=\"bottom\"\n        }\n    ],\n    data=[\n        {\n            name=\"layer_indices\",\n            values=[\n                0,\n                1,\n                2,\n                3\n            ],\n            transform=[\n                {\n                    expr=\"datum.data < layers\",\n                    type=\"filter\"\n                },\n                {\n                    as=\"offset\",\n                    expr=\"datum.data * -height\",\n                    type=\"formula\"\n                }\n            ]\n        },\n        {\n            name=\"table\",\n            values=[\n                {\n                    x=1,\n                    y=28\n                },\n                {\n                    x=2,\n                    y=55\n                },\n                {\n                    x=3,\n                    y=43\n                },\n                {\n                    x=4,\n                    y=91\n                },\n                {\n                    x=5,\n                    y=81\n                },\n                {\n                    x=6,\n                    y=53\n                },\n                {\n                    x=7,\n                    y=19\n                },\n                {\n                    x=8,\n                    y=87\n                },\n                {\n                    x=9,\n                    y=52\n                },\n                {\n                    x=10,\n                    y=48\n                },\n                {\n                    x=11,\n                    y=24\n                },\n                {\n                    x=12,\n                    y=49\n                },\n                {\n                    x=13,\n                    y=87\n                },\n                {\n                    x=14,\n                    y=66\n                },\n                {\n                    x=15,\n                    y=17\n                },\n                {\n                    x=16,\n                    y=27\n                },\n                {\n                    x=17,\n                    y=68\n                },\n                {\n                    x=18,\n                    y=16\n                },\n                {\n                    x=19,\n                    y=49\n                },\n                {\n                    x=20,\n                    y=15\n                }\n            ]\n        }\n    ],\n    scales=[\n        {\n            name=\"x\",\n            zero=false,\n            range=\"width\",\n            domain={\n                data=\"table\",\n                field=\"x\"\n            },\n            type=\"linear\",\n            round=true\n        },\n        {\n            name=\"y\",\n            nice=true,\n            zero=true,\n            range=[\n                {\n                    signal=\"vheight\"\n                },\n                0\n            ],\n            domain={\n                data=\"table\",\n                field=\"y\"\n            },\n            type=\"linear\"\n        }\n    ],\n    width=500,\n    signals=[\n        {\n            name=\"layers\",\n            bind={\n                options=[\n                    1,\n                    2,\n                    3,\n                    4\n                ],\n                input=\"select\"\n            },\n            on=[\n                {\n                    events=\"mousedown!\",\n                    update=\"1 + (layers % 4)\"\n                }\n            ],\n            value=2\n        },\n        {\n            name=\"height\",\n            update=\"floor(200 / layers)\"\n        },\n        {\n            name=\"vheight\",\n            update=\"height * layers\"\n        },\n        {\n            name=\"opacity\",\n            update=\"pow(layers, -2/3)\"\n        }\n    ]\n)","category":"page"},{"location":"examples/examples_vega_line_area_charts/#Job-Voyager-1","page":"Line & Area Charts","title":"Job Voyager","text":"","category":"section"},{"location":"examples/examples_vega_line_area_charts/#","page":"Line & Area Charts","title":"Line & Area Charts","text":"using Vega, VegaDatasets\n\n@vgplot(\n    height=500,\n    padding=5,\n    marks=[\n        {\n            marks=[\n                {\n                    encode={\n                        update={\n                            x={\n                                field=\"year\",\n                                scale=\"x\"\n                            },\n                            y2={\n                                field=\"y1\",\n                                scale=\"y\"\n                            },\n                            fillOpacity={\n                                field={\n                                    parent=\"sum\"\n                                },\n                                scale=\"alpha\"\n                            },\n                            fill={\n                                field=\"sex\",\n                                scale=\"color\"\n                            },\n                            y={\n                                field=\"y0\",\n                                scale=\"y\"\n                            }\n                        },\n                        hover={\n                            fillOpacity={\n                                value=0.2\n                            }\n                        }\n                    },\n                    from={\n                        data=\"facet\"\n                    },\n                    type=\"area\"\n                }\n            ],\n            from={\n                data=\"series\",\n                facet={\n                    name=\"facet\",\n                    data=\"jobs\",\n                    groupby=[\n                        \"job\",\n                        \"sex\"\n                    ]\n                }\n            },\n            type=\"group\"\n        },\n        {\n            encode={\n                update={\n                    text={\n                        field=\"job\"\n                    },\n                    align={\n                        field=\"argmax.year\",\n                        scale=\"align\"\n                    },\n                    baseline={\n                        value=\"middle\"\n                    },\n                    x={\n                        field=\"argmax.year\",\n                        scale=\"x\"\n                    },\n                    dx={\n                        field=\"argmax.year\",\n                        scale=\"offset\"\n                    },\n                    fill={\n                        value=\"#000\"\n                    },\n                    fillOpacity={\n                        field=\"argmax.perc\",\n                        scale=\"opacity\"\n                    },\n                    fontSize={\n                        offset=5,\n                        field=\"argmax.perc\",\n                        scale=\"font\"\n                    },\n                    y={\n                        signal=\"scale('y', 0.5 * (datum.argmax.y0 + datum.argmax.y1))\"\n                    }\n                }\n            },\n            interactive=false,\n            from={\n                data=\"series\"\n            },\n            type=\"text\"\n        }\n    ],\n    axes=[\n        {\n            format=\"d\",\n            tickCount=15,\n            scale=\"x\",\n            orient=\"bottom\"\n        },\n        {\n            format=\"%\",\n            domain=false,\n            encode={\n                grid={\n                    enter={\n                        stroke={\n                            value=\"#ccc\"\n                        }\n                    }\n                },\n                ticks={\n                    enter={\n                        stroke={\n                            value=\"#ccc\"\n                        }\n                    }\n                }\n            },\n            grid=true,\n            scale=\"y\",\n            orient=\"right\",\n            tickSize=12\n        }\n    ],\n    data=[\n        {\n            name=\"jobs\",\n            values=dataset(\"jobs\"),\n            transform=[\n                {\n                    expr=\"(sex === 'all' || datum.sex === sex) && (!query || test(regexp(query,'i'), datum.job))\",\n                    type=\"filter\"\n                },\n                {\n                    sort={\n                        order=[\n                            \"descending\",\n                            \"descending\"\n                        ],\n                        field=[\n                            \"job\",\n                            \"sex\"\n                        ]\n                    },\n                    field=\"perc\",\n                    groupby=[\n                        \"year\"\n                    ],\n                    type=\"stack\"\n                }\n            ]\n        },\n        {\n            name=\"series\",\n            source=\"jobs\",\n            transform=[\n                {\n                    fields=[\n                        \"perc\",\n                        \"perc\"\n                    ],\n                    ops=[\n                        \"sum\",\n                        \"argmax\"\n                    ],\n                    as=[\n                        \"sum\",\n                        \"argmax\"\n                    ],\n                    groupby=[\n                        \"job\",\n                        \"sex\"\n                    ],\n                    type=\"aggregate\"\n                }\n            ]\n        }\n    ],\n    scales=[\n        {\n            name=\"x\",\n            zero=false,\n            range=\"width\",\n            domain={\n                data=\"jobs\",\n                field=\"year\"\n            },\n            type=\"linear\",\n            round=true\n        },\n        {\n            name=\"y\",\n            zero=true,\n            range=\"height\",\n            domain={\n                data=\"jobs\",\n                field=\"y1\"\n            },\n            type=\"linear\",\n            round=true\n        },\n        {\n            name=\"color\",\n            range=[\n                \"#33f\",\n                \"#f33\"\n            ],\n            domain=[\n                \"men\",\n                \"women\"\n            ],\n            type=\"ordinal\"\n        },\n        {\n            name=\"alpha\",\n            zero=true,\n            range=[\n                0.4,\n                0.8\n            ],\n            domain={\n                data=\"series\",\n                field=\"sum\"\n            },\n            type=\"linear\"\n        },\n        {\n            name=\"font\",\n            zero=true,\n            range=[\n                0,\n                20\n            ],\n            domain={\n                data=\"series\",\n                field=\"argmax.perc\"\n            },\n            type=\"sqrt\",\n            round=true\n        },\n        {\n            name=\"opacity\",\n            range=[\n                0,\n                0,\n                0,\n                0,\n                0,\n                0.1,\n                0.2,\n                0.4,\n                0.7,\n                1.0\n            ],\n            domain={\n                data=\"series\",\n                field=\"argmax.perc\"\n            },\n            type=\"quantile\"\n        },\n        {\n            name=\"align\",\n            zero=false,\n            range=[\n                \"left\",\n                \"center\",\n                \"right\"\n            ],\n            domain=[\n                1730,\n                2130\n            ],\n            type=\"quantize\"\n        },\n        {\n            name=\"offset\",\n            zero=false,\n            range=[\n                6,\n                0,\n                -6\n            ],\n            domain=[\n                1730,\n                2130\n            ],\n            type=\"quantize\"\n        }\n    ],\n    width=800,\n    signals=[\n        {\n            name=\"sex\",\n            bind={\n                options=[\n                    \"men\",\n                    \"women\",\n                    \"all\"\n                ],\n                input=\"radio\"\n            },\n            value=\"all\"\n        },\n        {\n            name=\"query\",\n            bind={\n                input=\"text\",\n                placeholder=\"search\",\n                autocomplete=\"off\"\n            },\n            on=[\n                {\n                    events=\"area:click!\",\n                    update=\"datum.job\"\n                },\n                {\n                    events=\"dblclick!\",\n                    update=\"''\"\n                }\n            ],\n            value=\"\"\n        }\n    ]\n)","category":"page"},{"location":"referencemanual/global/#Global-settings-1","page":"Global settings","title":"Global settings","text":"","category":"section"},{"location":"referencemanual/global/#","page":"Global settings","title":"Global settings","text":"renderer","category":"page"},{"location":"referencemanual/global/#Vega.renderer","page":"Global settings","title":"Vega.renderer","text":"renderer()\n\nshow current rendering mode (svg or canvas)\n\nrenderer(::Symbol)\n\nset rendering mode (svg or canvas)\n\n\n\n\n\n","category":"function"},{"location":"referencemanual/global/#","page":"Global settings","title":"Global settings","text":"actionlinks","category":"page"},{"location":"referencemanual/global/#Vega.actionlinks","page":"Global settings","title":"Vega.actionlinks","text":"actionlinks()::Bool\n\nshow if plots will have (true) or not (false) the action links displayed\n\nactionlinks(::Bool)\n\nindicate if actions links should be dislpayed under the plot\n\n\n\n\n\n","category":"function"},{"location":"examples/examples_vega_multi_data_source/#Using-Vega-with-Multiple-Data-Sources-1","page":"Multiple Data Source","title":"Using Vega with Multiple Data Sources","text":"","category":"section"},{"location":"examples/examples_vega_multi_data_source/#Dorling-Cartogram-1","page":"Multiple Data Source","title":"Dorling Cartogram","text":"","category":"section"},{"location":"examples/examples_vega_multi_data_source/#","page":"Multiple Data Source","title":"Multiple Data Source","text":"From Vega Dorling Cartogram Example","category":"page"},{"location":"examples/examples_vega_multi_data_source/#","page":"Multiple Data Source","title":"Multiple Data Source","text":"using Vega, VegaDatasets, URIParser\n\nuri = URI(\"https://raw.githubusercontent.com/vega/vega-datasets/master/data/us-10m.json\")\n\nvg\"\"\"{\n  \"width\": 900,\n  \"height\": 520,\n  \"autosize\": \"none\",\n\n  \"config\": {\n    \"legend\": {\n      \"gradientDirection\": \"horizontal\",\n      \"gradientLength\": 120,\n      \"gradientThickness\": 10\n    }\n  },\n\n  \"data\": [\n    {\n      \"name\": \"states\",\n      \"format\": {\"type\": \"topojson\", \"feature\": \"states\"}\n    },\n    {\n      \"name\": \"obesity\",\n      \"transform\": [\n        {\n          \"type\": \"lookup\",\n          \"from\": \"states\", \"key\": \"id\",\n          \"fields\": [\"id\"], \"as\": [\"geo\"]\n        },\n        {\n          \"type\": \"filter\",\n          \"expr\": \"datum.geo\"\n        },\n        {\n          \"type\": \"formula\", \"as\": \"centroid\",\n          \"expr\": \"geoCentroid('projection', datum.geo)\"\n        }\n      ]\n    }\n  ],\n\n  \"projections\": [\n    {\n      \"name\": \"projection\",\n      \"type\": \"albersUsa\",\n      \"scale\": 1100,\n      \"translate\": [{\"signal\": \"width / 2\"}, {\"signal\": \"height / 2\"}]\n    }\n  ],\n\n  \"scales\": [\n    {\n      \"name\": \"size\",\n      \"domain\": {\"data\": \"obesity\", \"field\": \"rate\"},\n      \"zero\": false,\n      \"range\": [1000, 5000]\n    },\n    {\n      \"name\": \"color\",\n      \"type\": \"linear\",\n      \"nice\": true,\n      \"domain\": {\"data\": \"obesity\", \"field\": \"rate\"},\n      \"range\": \"ramp\"\n    }\n  ],\n\n  \"legends\": [\n    {\n      \"title\": \"% of Obese Adults\",\n      \"orient\": \"bottom-right\",\n      \"type\": \"symbol\",\n      \"size\": \"size\",\n      \"fill\": \"color\",\n      \"format\": \".1%\",\n      \"clipHeight\": 16\n    }\n  ],\n\n  \"marks\": [\n    {\n      \"name\": \"circles\",\n      \"type\": \"symbol\",\n      \"from\": {\"data\": \"obesity\"},\n      \"encode\": {\n        \"enter\": {\n          \"size\": {\"scale\": \"size\", \"field\": \"rate\"},\n          \"fill\": {\"scale\": \"color\", \"field\": \"rate\"},\n          \"stroke\": {\"value\": \"white\"},\n          \"strokeWidth\": {\"value\": 1.5},\n          \"x\": {\"field\": \"centroid[0]\"},\n          \"y\": {\"field\": \"centroid[1]\"},\n          \"tooltip\": {\"signal\": \"'Obesity Rate: ' + format(datum.rate, '.1%')\"}\n        }\n      },\n      \"transform\": [\n        {\n          \"type\": \"force\",\n          \"static\": true,\n          \"forces\": [\n            {\"force\": \"collide\", \"radius\": {\"expr\": \"1 + sqrt(datum.size) / 2\"}},\n            {\"force\": \"x\", \"x\": \"datum.centroid[0]\"},\n            {\"force\": \"y\", \"y\": \"datum.centroid[1]\"}\n          ]\n        }\n      ]\n    },\n    {\n      \"type\": \"text\",\n      \"interactive\": false,\n      \"from\": {\"data\": \"circles\"},\n      \"encode\": {\n        \"enter\": {\n          \"align\": {\"value\": \"center\"},\n          \"baseline\": {\"value\": \"middle\"},\n          \"fontSize\": {\"value\": 13},\n          \"fontWeight\": {\"value\": \"bold\"},\n          \"text\": {\"field\": \"datum.state\"}\n        },\n        \"update\": {\n          \"x\": {\"field\": \"x\"},\n          \"y\": {\"field\": \"y\"}\n        }\n      }\n    }\n  ]\n}\"\"\"(uri, \"states\")(dataset(\"obesity\"), \"obesity\")","category":"page"},{"location":"examples/examples_vega_single_data_source/#Using-Vega-with-One-Data-Source-1","page":"Single Data Source","title":"Using Vega with One Data Source","text":"","category":"section"},{"location":"examples/examples_vega_single_data_source/#Word-Cloud-1","page":"Single Data Source","title":"Word Cloud","text":"","category":"section"},{"location":"examples/examples_vega_single_data_source/#","page":"Single Data Source","title":"Single Data Source","text":"using Vega, DataFrames\n\ndata = DataFrame(text = [\"computing\", \"scientific\", \"neural ode\", \"complex\", \"parallel\", \"recommender system\", \"multiple dispatch\", \"stochastic dual dynamic\", \"data\", \"overview\", \"environment\", \"user\", \"package environment\", \"factor graph based\", \"solve\", \"operation\", \"include\", \"mean\", \"tool\", \"programming language\", \"federal reserve bank\", \"monte carlo iteration\", \"based\", \"example\", \"command literal\", \"efficient\", \"provide\", \"experience\", \"approach\", \"tensor network\", \"monte carlo\", \"quantum\", \"set\", \"data type\", \"dual dynamic programming\", \"cell\", \"support\", \"method\", \"time\", \"computational\", \"analysis\", \"estimation\", \"allow\", \"language\", \"libraries\", \"space\", \"thread based parallelism\", \"system\", \"machine learning model\", \"modeling\", \"offer\", \"including\", \"differential equation solver\", \"software\", \"computer science\", \"neural ordinary differential\", \"implemented\", \"solution\", \"nonlinear\", \"demonstrate\", \"parameter\", \"community\", \"deploying web server\", \"scientific computing\", \"implementation\", \"probabilistic programming system\", \"machine learning\", \"chain monte carlo\", \"change\", \"deep learning\", \"run\", \"development\", \"data science\", \"library\", \"specific\", \"markov chain monte\", \"term\", \"introduce\", \"design\", \"software development\", \"presentation\", \"model\", \"written\", \"trajectory optimization\", \"literate programming\", \"package\", \"idea\", \"time series data\", \"scale\", \"level\", \"tensor network algorithm\", \"various\", \"interface\", \"ordinary differential equation\", \"version\", \"research\", \"result\", \"discuss lessons learned\", \"function\", \"parallelism\", \"bank york federal\", \"differential equation\", \"minority class instance\", \"information\", \"probabilistic programming\", \"dynamic stochastic equilibrium\", \"diversity inclusion\", \"inference\", \"source\", \"probabilistic programming language\", \"built\", \"simulation\", \"explore\", \"control\", \"algebra\", \"ecosystem\", \"york federal reserve\", \"partial differential equation\", \"package manager\", \"easy\", \"feature\", \"ms mib mib\", \"data structure\", \"code\", \"available\", \"neural network\", \"ha model\", \"computation\", \"field\", \"challenge\", \"framework\", \"require\", \"ml\", \"code snippets\", \"dynamic programming sddp\", \"source file\", \"algorithm\", \"optimization\", \"discuss\", \"power\", \"sampling approach\", \"distributed\", \"solving\", \"federal reserve system\", \"aircraft\", \"project\", \"application\", \"technique\", \"performance\", \"reserve bank york\", \"type system\", \"qsp model\", \"type\", \"process\"], count = [18, 18, 40, 25, 19, 20, 44, 36, 84, 19, 20, 49, 24, 27, 21, 32, 24, 19, 43, 40, 54, 36, 42, 34, 20, 17, 32, 17, 21, 40, 36, 23, 22, 20, 36, 23, 28, 66, 67, 22, 22, 19, 38, 68, 16, 20, 36, 62, 36, 33, 16, 26, 45, 16, 20, 36, 19, 18, 16, 23, 25, 23, 27, 48, 38, 36, 88, 36, 17, 20, 17, 32, 24, 25, 16, 36, 16, 21, 34, 20, 16, 144, 19, 20, 20, 109, 16, 27, 19, 27, 27, 25, 23, 72, 20, 24, 26, 27, 45, 18, 36, 64, 27, 17, 20, 27, 20, 21, 26, 54, 18, 17, 16, 19, 16, 29, 36, 27, 28, 21, 29, 27, 36, 87, 21, 44, 20, 28, 20, 19, 19, 23, 17, 20, 36, 32, 77, 41, 34, 16, 24, 19, 18, 36, 16, 33, 38, 24, 66, 54, 36, 20, 24, 19])\n\nword_cloud_spec = vg\"\"\"{\n  \"width\": 900,\n  \"height\": 350,\n  \"padding\": 10,\n\n  \"data\": [\n    {\n      \"name\": \"table\"\n    }\n  ],\n\n  \"scales\": [\n    {\n      \"name\": \"color\",\n      \"type\": \"log\",\n      \"domain\": {\"data\": \"table\", \"field\": \"count\"},\n      \"range\": {\"scheme\": \"purpleblue\"}\n    }\n  ],\n\n  \"marks\": [\n    {\n      \"type\": \"text\",\n      \"from\": {\"data\": \"table\"},\n      \"encode\": {\n        \"enter\": {\n          \"text\": {\"field\": \"text\"},\n          \"align\": {\"value\": \"center\"},\n          \"baseline\": {\"value\": \"alphabetic\"},\n          \"fill\": {\"scale\": \"color\", \"field\": \"count\"}\n        },\n        \"update\": {\n          \"fillOpacity\": {\"value\": 0.6}\n        },\n        \"hover\": {\n          \"fillOpacity\": {\"value\": 1.0}\n        }\n      },\n      \"transform\": [\n        {\n          \"type\": \"wordcloud\",\n          \"size\": [{\"signal\": \"width\"}, {\"signal\": \"height\"}],\n          \"text\": {\"field\": \"text\"},\n          \"font\": \"Helvetica Neue, Arial\",\n          \"fontSize\": {\"field\": \"datum.count\"},\n          \"fontSizeRange\": [12, 56],\n          \"padding\": 2\n        }\n      ]\n    }\n  ]\n}\"\"\"(data, \"table\")","category":"page"},{"location":"examples/examples_vega_network_diagrams/#Network-Diagrams-1","page":"Network Diagrams","title":"Network Diagrams","text":"","category":"section"},{"location":"examples/examples_vega_network_diagrams/#Edge-Bundling-1","page":"Network Diagrams","title":"Edge Bundling","text":"","category":"section"},{"location":"examples/examples_vega_network_diagrams/#","page":"Network Diagrams","title":"Network Diagrams","text":"using Vega, VegaDatasets\n\n@vgplot(\n    height=720,\n    padding=5,\n    marks=[\n        {\n            encode={\n                update={\n                    align={\n                        signal=\"datum.leftside ? 'right' : 'left'\"\n                    },\n                    fontWeight=[\n                        {\n                            test=\"indata('selected', 'source', datum.id)\",\n                            value=\"bold\"\n                        },\n                        {\n                            test=\"indata('selected', 'target', datum.id)\",\n                            value=\"bold\"\n                        },\n                        {\n                            value=nothing\n                        }\n                    ],\n                    x={\n                        field=\"x\"\n                    },\n                    dx={\n                        signal=\"textOffset * (datum.leftside ? -1 : 1)\"\n                    },\n                    fontSize={\n                        signal=\"textSize\"\n                    },\n                    angle={\n                        signal=\"datum.leftside ? datum.angle - 180 : datum.angle\"\n                    },\n                    fill=[\n                        {\n                            test=\"datum.id === active\",\n                            value=\"black\"\n                        },\n                        {\n                            test=\"indata('selected', 'source', datum.id)\",\n                            signal=\"colorIn\"\n                        },\n                        {\n                            test=\"indata('selected', 'target', datum.id)\",\n                            signal=\"colorOut\"\n                        },\n                        {\n                            value=\"black\"\n                        }\n                    ],\n                    y={\n                        field=\"y\"\n                    }\n                },\n                enter={\n                    text={\n                        field=\"name\"\n                    },\n                    baseline={\n                        value=\"middle\"\n                    }\n                }\n            },\n            from={\n                data=\"leaves\"\n            },\n            type=\"text\"\n        },\n        {\n            marks=[\n                {\n                    encode={\n                        update={\n                            tension={\n                                signal=\"tension\"\n                            },\n                            stroke=[\n                                {\n                                    test=\"parent.source === active\",\n                                    signal=\"colorOut\"\n                                },\n                                {\n                                    test=\"parent.target === active\",\n                                    signal=\"colorIn\"\n                                },\n                                {\n                                    value=\"steelblue\"\n                                }\n                            ],\n                            x={\n                                field=\"x\"\n                            },\n                            strokeOpacity=[\n                                {\n                                    test=\"parent.source === active || parent.target === active\",\n                                    value=1\n                                },\n                                {\n                                    value=0.2\n                                }\n                            ],\n                            y={\n                                field=\"y\"\n                            }\n                        },\n                        enter={\n                            interpolate={\n                                value=\"bundle\"\n                            },\n                            strokeWidth={\n                                value=1.5\n                            }\n                        }\n                    },\n                    interactive=false,\n                    from={\n                        data=\"path\"\n                    },\n                    type=\"line\"\n                }\n            ],\n            from={\n                facet={\n                    name=\"path\",\n                    data=\"dependencies\",\n                    field=\"treepath\"\n                }\n            },\n            type=\"group\"\n        }\n    ],\n    data=[\n        {\n            name=\"tree\",\n            values=dataset(\"flare\"),\n            transform=[\n                {\n                    key=\"id\",\n                    parentKey=\"parent\",\n                    type=\"stratify\"\n                },\n                {\n                    method={\n                        signal=\"layout\"\n                    },\n                    as=[\n                        \"alpha\",\n                        \"beta\",\n                        \"depth\",\n                        \"children\"\n                    ],\n                    size=[\n                        1,\n                        1\n                    ],\n                    type=\"tree\"\n                },\n                {\n                    as=\"angle\",\n                    expr=\"(rotate + extent * datum.alpha + 270) % 360\",\n                    type=\"formula\"\n                },\n                {\n                    as=\"leftside\",\n                    expr=\"inrange(datum.angle, [90, 270])\",\n                    type=\"formula\"\n                },\n                {\n                    as=\"x\",\n                    expr=\"originX + radius * datum.beta * cos(PI * datum.angle / 180)\",\n                    type=\"formula\"\n                },\n                {\n                    as=\"y\",\n                    expr=\"originY + radius * datum.beta * sin(PI * datum.angle / 180)\",\n                    type=\"formula\"\n                }\n            ]\n        },\n        {\n            name=\"leaves\",\n            source=\"tree\",\n            transform=[\n                {\n                    expr=\"!datum.children\",\n                    type=\"filter\"\n                }\n            ]\n        },\n        {\n            name=\"dependencies\",\n            values=dataset(\"flare-dependencies\"),\n            transform=[\n                {\n                    initonly=true,\n                    as=\"treepath\",\n                    expr=\"treePath('tree', datum.source, datum.target)\",\n                    type=\"formula\"\n                }\n            ]\n        },\n        {\n            name=\"selected\",\n            source=\"dependencies\",\n            transform=[\n                {\n                    expr=\"datum.source === active || datum.target === active\",\n                    type=\"filter\"\n                }\n            ]\n        }\n    ],\n    scales=[\n        {\n            name=\"color\",\n            range=[\n                {\n                    signal=\"colorIn\"\n                },\n                {\n                    signal=\"colorOut\"\n                }\n            ],\n            domain=[\n                \"depends on\",\n                \"imported by\"\n            ],\n            type=\"ordinal\"\n        }\n    ],\n    width=720,\n    autosize=\"none\",\n    signals=[\n        {\n            name=\"tension\",\n            bind={\n                step=0.01,\n                max=1,\n                min=0,\n                input=\"range\"\n            },\n            value=0.85\n        },\n        {\n            name=\"radius\",\n            bind={\n                max=400,\n                min=20,\n                input=\"range\"\n            },\n            value=280\n        },\n        {\n            name=\"extent\",\n            bind={\n                step=1,\n                max=360,\n                min=0,\n                input=\"range\"\n            },\n            value=360\n        },\n        {\n            name=\"rotate\",\n            bind={\n                step=1,\n                max=360,\n                min=0,\n                input=\"range\"\n            },\n            value=0\n        },\n        {\n            name=\"textSize\",\n            bind={\n                step=1,\n                max=20,\n                min=2,\n                input=\"range\"\n            },\n            value=8\n        },\n        {\n            name=\"textOffset\",\n            bind={\n                step=1,\n                max=10,\n                min=0,\n                input=\"range\"\n            },\n            value=2\n        },\n        {\n            name=\"layout\",\n            bind={\n                options=[\n                    \"tidy\",\n                    \"cluster\"\n                ],\n                input=\"radio\"\n            },\n            value=\"cluster\"\n        },\n        {\n            name=\"colorIn\",\n            value=\"firebrick\"\n        },\n        {\n            name=\"colorOut\",\n            value=\"forestgreen\"\n        },\n        {\n            name=\"originX\",\n            update=\"width / 2\"\n        },\n        {\n            name=\"originY\",\n            update=\"height / 2\"\n        },\n        {\n            name=\"active\",\n            on=[\n                {\n                    events=\"text:mouseover\",\n                    update=\"datum.id\"\n                },\n                {\n                    events=\"mouseover[!event.item]\",\n                    update=\"null\"\n                }\n            ],\n            value=nothing\n        }\n    ],\n    legends=[\n        {\n            stroke=\"color\",\n            title=\"Dependencies\",\n            symbolType=\"stroke\",\n            orient=\"bottom-right\"\n        }\n    ]\n)","category":"page"},{"location":"examples/examples_vega_network_diagrams/#Force-Directed-Layout-1","page":"Network Diagrams","title":"Force Directed Layout","text":"","category":"section"},{"location":"examples/examples_vega_network_diagrams/#","page":"Network Diagrams","title":"Network Diagrams","text":"TODO We need to figure out how we can handle this type of data loading first.","category":"page"},{"location":"examples/examples_vega_network_diagrams/#Reorderable-Matrix-1","page":"Network Diagrams","title":"Reorderable Matrix","text":"","category":"section"},{"location":"examples/examples_vega_network_diagrams/#","page":"Network Diagrams","title":"Network Diagrams","text":"TODO We need to figure out how we can handle this type of data loading first.","category":"page"},{"location":"examples/examples_vega_network_diagrams/#Arc-Diagram-1","page":"Network Diagrams","title":"Arc Diagram","text":"","category":"section"},{"location":"examples/examples_vega_network_diagrams/#","page":"Network Diagrams","title":"Network Diagrams","text":"TODO We need to figure out how we can handle this type of data loading first.","category":"page"},{"location":"examples/examples_vega_network_diagrams/#Airport-Connections-1","page":"Network Diagrams","title":"Airport Connections","text":"","category":"section"},{"location":"examples/examples_vega_network_diagrams/#","page":"Network Diagrams","title":"Network Diagrams","text":"TODO We need to figure out how we can handle this type of data loading first.","category":"page"},{"location":"examples/examples_vega_circular_charts/#Circular-Charts-1","page":"Circular Charts","title":"Circular Charts","text":"","category":"section"},{"location":"examples/examples_vega_circular_charts/#Pie-Chart-1","page":"Circular Charts","title":"Pie Chart","text":"","category":"section"},{"location":"examples/examples_vega_circular_charts/#","page":"Circular Charts","title":"Circular Charts","text":"using Vega\n\n@vgplot(\n    height=200,\n    marks=[\n        {\n            encode={\n                update={\n                    innerRadius={\n                        signal=\"innerRadius\"\n                    },\n                    startAngle={\n                        field=\"startAngle\"\n                    },\n                    cornerRadius={\n                        signal=\"cornerRadius\"\n                    },\n                    padAngle={\n                        signal=\"padAngle\"\n                    },\n                    endAngle={\n                        field=\"endAngle\"\n                    },\n                    outerRadius={\n                        signal=\"width / 2\"\n                    }\n                },\n                enter={\n                    x={\n                        signal=\"width / 2\"\n                    },\n                    fill={\n                        field=\"id\",\n                        scale=\"color\"\n                    },\n                    y={\n                        signal=\"height / 2\"\n                    }\n                }\n            },\n            from={\n                data=\"table\"\n            },\n            type=\"arc\"\n        }\n    ],\n    data=[\n        {\n            name=\"table\",\n            values=[\n                {\n                    id=1,\n                    field=4\n                },\n                {\n                    id=2,\n                    field=6\n                },\n                {\n                    id=3,\n                    field=10\n                },\n                {\n                    id=4,\n                    field=3\n                },\n                {\n                    id=5,\n                    field=7\n                },\n                {\n                    id=6,\n                    field=8\n                }\n            ],\n            transform=[\n                {\n                    startAngle={\n                        signal=\"startAngle\"\n                    },\n                    sort={\n                        signal=\"sort\"\n                    },\n                    field=\"field\",\n                    endAngle={\n                        signal=\"endAngle\"\n                    },\n                    type=\"pie\"\n                }\n            ]\n        }\n    ],\n    scales=[\n        {\n            name=\"color\",\n            range={\n                scheme=\"category20\"\n            },\n            domain={\n                data=\"table\",\n                field=\"id\"\n            },\n            type=\"ordinal\"\n        }\n    ],\n    width=200,\n    autosize=\"none\",\n    signals=[\n        {\n            name=\"startAngle\",\n            bind={\n                step=0.01,\n                max=6.29,\n                min=0,\n                input=\"range\"\n            },\n            value=0\n        },\n        {\n            name=\"endAngle\",\n            bind={\n                step=0.01,\n                max=6.29,\n                min=0,\n                input=\"range\"\n            },\n            value=6.29\n        },\n        {\n            name=\"padAngle\",\n            bind={\n                max=0.1,\n                min=0,\n                input=\"range\"\n            },\n            value=0\n        },\n        {\n            name=\"innerRadius\",\n            bind={\n                step=1,\n                max=90,\n                min=0,\n                input=\"range\"\n            },\n            value=0\n        },\n        {\n            name=\"cornerRadius\",\n            bind={\n                step=0.5,\n                max=10,\n                min=0,\n                input=\"range\"\n            },\n            value=0\n        },\n        {\n            name=\"sort\",\n            bind={\n                input=\"checkbox\"\n            },\n            value=false\n        }\n    ]\n)","category":"page"},{"location":"examples/examples_vega_circular_charts/#Donut-Chart-1","page":"Circular Charts","title":"Donut Chart","text":"","category":"section"},{"location":"examples/examples_vega_circular_charts/#","page":"Circular Charts","title":"Circular Charts","text":"using Vega\n\n@vgplot(\n    height=200,\n    marks=[\n        {\n            encode={\n                update={\n                    innerRadius={\n                        signal=\"innerRadius\"\n                    },\n                    startAngle={\n                        field=\"startAngle\"\n                    },\n                    cornerRadius={\n                        signal=\"cornerRadius\"\n                    },\n                    padAngle={\n                        signal=\"padAngle\"\n                    },\n                    endAngle={\n                        field=\"endAngle\"\n                    },\n                    outerRadius={\n                        signal=\"width / 2\"\n                    }\n                },\n                enter={\n                    x={\n                        signal=\"width / 2\"\n                    },\n                    fill={\n                        field=\"id\",\n                        scale=\"color\"\n                    },\n                    y={\n                        signal=\"height / 2\"\n                    }\n                }\n            },\n            from={\n                data=\"table\"\n            },\n            type=\"arc\"\n        }\n    ],\n    data=[\n        {\n            name=\"table\",\n            values=[\n                {\n                    id=1,\n                    field=4\n                },\n                {\n                    id=2,\n                    field=6\n                },\n                {\n                    id=3,\n                    field=10\n                },\n                {\n                    id=4,\n                    field=3\n                },\n                {\n                    id=5,\n                    field=7\n                },\n                {\n                    id=6,\n                    field=8\n                }\n            ],\n            transform=[\n                {\n                    startAngle={\n                        signal=\"startAngle\"\n                    },\n                    sort={\n                        signal=\"sort\"\n                    },\n                    field=\"field\",\n                    endAngle={\n                        signal=\"endAngle\"\n                    },\n                    type=\"pie\"\n                }\n            ]\n        }\n    ],\n    scales=[\n        {\n            name=\"color\",\n            range={\n                scheme=\"category20\"\n            },\n            domain={\n                data=\"table\",\n                field=\"id\"\n            },\n            type=\"ordinal\"\n        }\n    ],\n    width=200,\n    autosize=\"none\",\n    signals=[\n        {\n            name=\"startAngle\",\n            bind={\n                step=0.01,\n                max=6.29,\n                min=0,\n                input=\"range\"\n            },\n            value=0\n        },\n        {\n            name=\"endAngle\",\n            bind={\n                step=0.01,\n                max=6.29,\n                min=0,\n                input=\"range\"\n            },\n            value=6.29\n        },\n        {\n            name=\"padAngle\",\n            bind={\n                max=0.1,\n                min=0,\n                input=\"range\"\n            },\n            value=0\n        },\n        {\n            name=\"innerRadius\",\n            bind={\n                step=1,\n                max=90,\n                min=0,\n                input=\"range\"\n            },\n            value=60\n        },\n        {\n            name=\"cornerRadius\",\n            bind={\n                step=0.5,\n                max=10,\n                min=0,\n                input=\"range\"\n            },\n            value=0\n        },\n        {\n            name=\"sort\",\n            bind={\n                input=\"checkbox\"\n            },\n            value=false\n        }\n    ]\n)","category":"page"},{"location":"examples/examples_vega_circular_charts/#Radial-Plot-1","page":"Circular Charts","title":"Radial Plot","text":"","category":"section"},{"location":"examples/examples_vega_circular_charts/#","page":"Circular Charts","title":"Circular Charts","text":"using Vega\n\n@vgplot(\n    height=200,\n    marks=[\n        {\n            encode={\n                update={\n                    fill={\n                        value=\"#ccc\"\n                    }\n                },\n                hover={\n                    fill={\n                        value=\"pink\"\n                    }\n                },\n                enter={\n                    innerRadius={\n                        value=20\n                    },\n                    startAngle={\n                        field=\"startAngle\"\n                    },\n                    stroke={\n                        value=\"#fff\"\n                    },\n                    x={\n                        mult=0.5,\n                        field={\n                            group=\"width\"\n                        }\n                    },\n                    endAngle={\n                        field=\"endAngle\"\n                    },\n                    outerRadius={\n                        field=\"data\",\n                        scale=\"r\"\n                    },\n                    y={\n                        mult=0.5,\n                        field={\n                            group=\"height\"\n                        }\n                    }\n                }\n            },\n            from={\n                data=\"table\"\n            },\n            type=\"arc\"\n        },\n        {\n            encode={\n                enter={\n                    align={\n                        value=\"center\"\n                    },\n                    theta={\n                        signal=\"(datum.startAngle + datum.endAngle)/2\"\n                    },\n                    x={\n                        mult=0.5,\n                        field={\n                            group=\"width\"\n                        }\n                    },\n                    radius={\n                        offset=8,\n                        field=\"data\",\n                        scale=\"r\"\n                    },\n                    fill={\n                        value=\"#000\"\n                    },\n                    baseline={\n                        value=\"middle\"\n                    },\n                    text={\n                        field=\"data\"\n                    },\n                    y={\n                        mult=0.5,\n                        field={\n                            group=\"height\"\n                        }\n                    }\n                }\n            },\n            from={\n                data=\"table\"\n            },\n            type=\"text\"\n        }\n    ],\n    data=[\n        {\n            name=\"table\",\n            values=[\n                12,\n                23,\n                47,\n                6,\n                52,\n                19\n            ],\n            transform=[\n                {\n                    field=\"data\",\n                    type=\"pie\"\n                }\n            ]\n        }\n    ],\n    scales=[\n        {\n            name=\"r\",\n            zero=true,\n            range=[\n                20,\n                100\n            ],\n            domain={\n                data=\"table\",\n                field=\"data\"\n            },\n            type=\"sqrt\"\n        }\n    ],\n    width=200\n)","category":"page"},{"location":"examples/examples_vega_circular_charts/#Radar-Chart-1","page":"Circular Charts","title":"Radar Chart","text":"","category":"section"},{"location":"examples/examples_vega_circular_charts/#","page":"Circular Charts","title":"Circular Charts","text":"using Vega\n\n@vgplot(\n    height=400,\n    padding=40,\n    marks=[\n        {\n            name=\"categories\",\n            marks=[\n                {\n                    name=\"category-line\",\n                    encode={\n                        enter={\n                            stroke={\n                                field=\"category\",\n                                scale=\"color\"\n                            },\n                            interpolate={\n                                value=\"linear-closed\"\n                            },\n                            x={\n                                signal=\"scale('radial', datum.value) * cos(scale('angular', datum.key))\"\n                            },\n                            strokeWidth={\n                                value=1\n                            },\n                            fillOpacity={\n                                value=0.1\n                            },\n                            fill={\n                                field=\"category\",\n                                scale=\"color\"\n                            },\n                            y={\n                                signal=\"scale('radial', datum.value) * sin(scale('angular', datum.key))\"\n                            }\n                        }\n                    },\n                    from={\n                        data=\"facet\"\n                    },\n                    type=\"line\"\n                },\n                {\n                    name=\"value-text\",\n                    encode={\n                        enter={\n                            align={\n                                value=\"center\"\n                            },\n                            x={\n                                signal=\"datum.x\"\n                            },\n                            text={\n                                signal=\"datum.datum.value\"\n                            },\n                            baseline={\n                                value=\"middle\"\n                            },\n                            fill={\n                                value=\"black\"\n                            },\n                            y={\n                                signal=\"datum.y\"\n                            }\n                        }\n                    },\n                    from={\n                        data=\"category-line\"\n                    },\n                    type=\"text\"\n                }\n            ],\n            zindex=1,\n            from={\n                facet={\n                    name=\"facet\",\n                    data=\"table\",\n                    groupby=[\n                        \"category\"\n                    ]\n                }\n            },\n            type=\"group\"\n        },\n        {\n            name=\"radial-grid\",\n            encode={\n                enter={\n                    stroke={\n                        value=\"lightgray\"\n                    },\n                    x2={\n                        signal=\"radius * cos(scale('angular', datum.key))\"\n                    },\n                    x={\n                        value=0\n                    },\n                    y2={\n                        signal=\"radius * sin(scale('angular', datum.key))\"\n                    },\n                    strokeWidth={\n                        value=1\n                    },\n                    y={\n                        value=0\n                    }\n                }\n            },\n            zindex=0,\n            from={\n                data=\"keys\"\n            },\n            type=\"rule\"\n        },\n        {\n            name=\"key-label\",\n            encode={\n                enter={\n                    align=[\n                        {\n                            test=\"abs(scale('angular', datum.key)) > PI / 2\",\n                            value=\"right\"\n                        },\n                        {\n                            value=\"left\"\n                        }\n                    ],\n                    fontWeight={\n                        value=\"bold\"\n                    },\n                    x={\n                        signal=\"(radius + 5) * cos(scale('angular', datum.key))\"\n                    },\n                    text={\n                        field=\"key\"\n                    },\n                    baseline=[\n                        {\n                            test=\"scale('angular', datum.key) > 0\",\n                            value=\"top\"\n                        },\n                        {\n                            test=\"scale('angular', datum.key) == 0\",\n                            value=\"middle\"\n                        },\n                        {\n                            value=\"bottom\"\n                        }\n                    ],\n                    fill={\n                        value=\"black\"\n                    },\n                    y={\n                        signal=\"(radius + 5) * sin(scale('angular', datum.key))\"\n                    }\n                }\n            },\n            zindex=1,\n            from={\n                data=\"keys\"\n            },\n            type=\"text\"\n        },\n        {\n            name=\"outer-line\",\n            encode={\n                enter={\n                    stroke={\n                        value=\"lightgray\"\n                    },\n                    interpolate={\n                        value=\"linear-closed\"\n                    },\n                    x={\n                        field=\"x2\"\n                    },\n                    strokeWidth={\n                        value=1\n                    },\n                    y={\n                        field=\"y2\"\n                    }\n                }\n            },\n            from={\n                data=\"radial-grid\"\n            },\n            type=\"line\"\n        }\n    ],\n    encode={\n        enter={\n            x={\n                signal=\"radius\"\n            },\n            y={\n                signal=\"radius\"\n            }\n        }\n    },\n    data=[\n        {\n            name=\"table\",\n            values=[\n                {\n                    key=\"key-0\",\n                    value=19,\n                    category=0\n                },\n                {\n                    key=\"key-1\",\n                    value=22,\n                    category=0\n                },\n                {\n                    key=\"key-2\",\n                    value=14,\n                    category=0\n                },\n                {\n                    key=\"key-3\",\n                    value=38,\n                    category=0\n                },\n                {\n                    key=\"key-4\",\n                    value=23,\n                    category=0\n                },\n                {\n                    key=\"key-5\",\n                    value=5,\n                    category=0\n                },\n                {\n                    key=\"key-6\",\n                    value=27,\n                    category=0\n                },\n                {\n                    key=\"key-0\",\n                    value=13,\n                    category=1\n                },\n                {\n                    key=\"key-1\",\n                    value=12,\n                    category=1\n                },\n                {\n                    key=\"key-2\",\n                    value=42,\n                    category=1\n                },\n                {\n                    key=\"key-3\",\n                    value=13,\n                    category=1\n                },\n                {\n                    key=\"key-4\",\n                    value=6,\n                    category=1\n                },\n                {\n                    key=\"key-5\",\n                    value=15,\n                    category=1\n                },\n                {\n                    key=\"key-6\",\n                    value=8,\n                    category=1\n                }\n            ]\n        },\n        {\n            name=\"keys\",\n            source=\"table\",\n            transform=[\n                {\n                    groupby=[\n                        \"key\"\n                    ],\n                    type=\"aggregate\"\n                }\n            ]\n        }\n    ],\n    scales=[\n        {\n            name=\"angular\",\n            padding=0.5,\n            range={\n                signal=\"[-PI, PI]\"\n            },\n            domain={\n                data=\"table\",\n                field=\"key\"\n            },\n            type=\"point\"\n        },\n        {\n            name=\"radial\",\n            zero=true,\n            nice=false,\n            range={\n                signal=\"[0, radius]\"\n            },\n            domain={\n                data=\"table\",\n                field=\"value\"\n            },\n            domainMin=0,\n            type=\"linear\"\n        },\n        {\n            name=\"color\",\n            range={\n                scheme=\"category10\"\n            },\n            domain={\n                data=\"table\",\n                field=\"category\"\n            },\n            type=\"ordinal\"\n        }\n    ],\n    width=400,\n    autosize={\n        contains=\"padding\",\n        type=\"none\"\n    },\n    signals=[\n        {\n            name=\"radius\",\n            update=\"width / 2\"\n        }\n    ]\n)\n","category":"page"},{"location":"gettingstarted/installation/#Installation-1","page":"Installation","title":"Installation","text":"","category":"section"},{"location":"gettingstarted/installation/#","page":"Installation","title":"Installation","text":"To install Vega.jl, run the following command in the Julia Pkg REPL-mode:","category":"page"},{"location":"gettingstarted/installation/#","page":"Installation","title":"Installation","text":"pkg> add Vega","category":"page"},{"location":"gettingstarted/installation/#REPL-frontends-1","page":"Installation","title":"REPL frontends","text":"","category":"section"},{"location":"gettingstarted/installation/#","page":"Installation","title":"Installation","text":"If you create plots from the standard Julia REPL, they will show up in a browser window when displayed.","category":"page"},{"location":"gettingstarted/installation/#","page":"Installation","title":"Installation","text":"As an alternative you can install ElectronDisplay.jl with pkg> add ElectronDisplay. Whenever you load that package with using ElectronDisplay, any plot you display will then show up in an electron based window instead of a browser window.","category":"page"},{"location":"gettingstarted/installation/#Notebook-frontends-1","page":"Installation","title":"Notebook frontends","text":"","category":"section"},{"location":"gettingstarted/installation/#","page":"Installation","title":"Installation","text":"Vega.jl works with Jupyter Lab, Jupyter Notebook and nteract.","category":"page"},{"location":"gettingstarted/installation/#","page":"Installation","title":"Installation","text":"The first step to use any of these notebooks frontends is to install them. The second step is to install the general Julia integration by running the following Julia code:","category":"page"},{"location":"gettingstarted/installation/#","page":"Installation","title":"Installation","text":"pkg> add IJulia","category":"page"},{"location":"gettingstarted/installation/#","page":"Installation","title":"Installation","text":"At that point you should be able to use Vega.jl in notebooks that have a Julia kernel.","category":"page"},{"location":"gettingstarted/installation/#","page":"Installation","title":"Installation","text":"We recommend that you use either Jupyter Lab or nteract for the best Vega.jl experience: you will get the full interactive experience of Vega-Lite in those two frontends without any further installations. While you can display plots in the classic Jupyter Notebook, you won't get interactive plots in that environment without further setup steps.","category":"page"},{"location":"gettingstarted/installation/#VS-Code-and-Juno/Atom-1","page":"Installation","title":"VS Code and Juno/Atom","text":"","category":"section"},{"location":"gettingstarted/installation/#","page":"Installation","title":"Installation","text":"If you plot from within VS Code with the Julia extension or Juno/Atom, plots will show up in a plot pane in those editors.","category":"page"},{"location":"gettingstarted/installation/#","page":"Installation","title":"Installation","text":"Plots in VS Code support all features of Vega.jl, including all interactive features. The plot pane in Juno currently does not support the interactive features of Vega.jl.","category":"page"},{"location":"gettingstarted/installation/#Example-Datasets-1","page":"Installation","title":"Example Datasets","text":"","category":"section"},{"location":"gettingstarted/installation/#","page":"Installation","title":"Installation","text":"Many of the examples in the documentation use data from the Vega Datasets repository. You can access these datasets easily with the Julia package VegaDatasets.jl. To install that package, run the following Julia code:","category":"page"},{"location":"gettingstarted/installation/#","page":"Installation","title":"Installation","text":"pkg> add VegaDatasets","category":"page"},{"location":"examples/examples_vega_scatter_plots/#Scatter-Plots-1","page":"Scatter Plots","title":"Scatter Plots","text":"","category":"section"},{"location":"examples/examples_vega_scatter_plots/#Scatter-Plot-1","page":"Scatter Plots","title":"Scatter Plot","text":"","category":"section"},{"location":"examples/examples_vega_scatter_plots/#","page":"Scatter Plots","title":"Scatter Plots","text":"using Vega, VegaDatasets\n\n@vgplot(    \n    height=200,\n    padding=5,\n    marks=[\n        {\n            name=\"marks\",\n            encode={\n                update={\n                    shape={\n                        value=\"circle\"\n                    },\n                    stroke={\n                        value=\"#4682b4\"\n                    },\n                    x={\n                        field=\"Horsepower\",\n                        scale=\"x\"\n                    },\n                    strokeWidth={\n                        value=2\n                    },\n                    size={\n                        field=\"Acceleration\",\n                        scale=\"size\"\n                    },\n                    fill={\n                        value=\"transparent\"\n                    },\n                    opacity={\n                        value=0.5\n                    },\n                    y={\n                        field=\"Miles_per_Gallon\",\n                        scale=\"y\"\n                    }\n                }\n            },\n            from={\n                data=\"source\"\n            },\n            type=\"symbol\"\n        }\n    ],\n    axes=[\n        {\n            domain=false,\n            tickCount=5,\n            grid=true,\n            title=\"Horsepower\",\n            scale=\"x\",\n            orient=\"bottom\"\n        },\n        {\n            domain=false,\n            grid=true,\n            titlePadding=5,\n            title=\"Miles_per_Gallon\",\n            scale=\"y\",\n            orient=\"left\"\n        }\n    ],\n    data=[\n        {\n            name=\"source\",\n            values=dataset(\"cars\"),\n            transform=[\n                {\n                    expr=\"datum['Horsepower'] != null && datum['Miles_per_Gallon'] != null && datum['Acceleration'] != null\",\n                    type=\"filter\"\n                }\n            ]\n        }\n    ],\n    scales=[\n        {\n            name=\"x\",\n            nice=true,\n            zero=true,\n            range=\"width\",\n            domain={\n                data=\"source\",\n                field=\"Horsepower\"\n            },\n            type=\"linear\",\n            round=true\n        },\n        {\n            name=\"y\",\n            nice=true,\n            zero=true,\n            range=\"height\",\n            domain={\n                data=\"source\",\n                field=\"Miles_per_Gallon\"\n            },\n            type=\"linear\",\n            round=true\n        },\n        {\n            name=\"size\",\n            nice=false,\n            zero=true,\n            range=[\n                4,\n                361\n            ],\n            domain={\n                data=\"source\",\n                field=\"Acceleration\"\n            },\n            type=\"linear\",\n            round=true\n        }\n    ],\n    width=200,\n    legends=[\n        {\n            symbolOpacity=0.5,\n            format=\"s\",\n            symbolStrokeWidth=2,\n            title=\"Acceleration\",\n            size=\"size\",\n            symbolStrokeColor=\"#4682b4\",\n            symbolType=\"circle\"\n        }\n    ]\n)","category":"page"},{"location":"examples/examples_vega_scatter_plots/#Scatter-Plot-Null-Values-1","page":"Scatter Plots","title":"Scatter Plot Null Values","text":"","category":"section"},{"location":"examples/examples_vega_scatter_plots/#","page":"Scatter Plots","title":"Scatter Plots","text":"using Vega, VegaDatasets\n\n@vgplot(\n    height=450,\n    padding=5,\n    marks=[\n        {\n            encode={\n                update={\n                    x={\n                        field={\n                            signal=\"xField\"\n                        },\n                        scale=\"xscale\"\n                    },\n                    zindex={\n                        value=0\n                    },\n                    fillOpacity={\n                        value=0.5\n                    },\n                    fill={\n                        value=\"steelblue\"\n                    },\n                    y={\n                        field={\n                            signal=\"yField\"\n                        },\n                        scale=\"yscale\"\n                    }\n                },\n                hover={\n                    zindex={\n                        value=1\n                    },\n                    fillOpacity={\n                        value=1\n                    },\n                    fill={\n                        value=\"firebrick\"\n                    }\n                },\n                enter={\n                    tooltip={\n                        field=\"tooltip\"\n                    },\n                    size={\n                        value=50\n                    }\n                }\n            },\n            from={\n                data=\"valid\"\n            },\n            type=\"symbol\"\n        },\n        {\n            encode={\n                update={\n                    x={\n                        field={\n                            signal=\"xField\"\n                        },\n                        scale=\"xscale\"\n                    },\n                    fillOpacity={\n                        value=0.2\n                    },\n                    fill={\n                        value=\"#aaa\"\n                    },\n                    y={\n                        signal=\"height - nullSize/2\"\n                    }\n                },\n                hover={\n                    fillOpacity={\n                        value=1\n                    },\n                    fill={\n                        value=\"firebrick\"\n                    }\n                },\n                enter={\n                    tooltip={\n                        field=\"tooltip\"\n                    },\n                    size={\n                        value=50\n                    }\n                }\n            },\n            from={\n                data=\"nullY\"\n            },\n            type=\"symbol\"\n        },\n        {\n            encode={\n                update={\n                    x={\n                        signal=\"nullSize/2\"\n                    },\n                    zindex={\n                        value=0\n                    },\n                    fillOpacity={\n                        value=0.2\n                    },\n                    fill={\n                        value=\"#aaa\"\n                    },\n                    y={\n                        field={\n                            signal=\"yField\"\n                        },\n                        scale=\"yscale\"\n                    }\n                },\n                hover={\n                    zindex={\n                        value=1\n                    },\n                    fillOpacity={\n                        value=1\n                    },\n                    fill={\n                        value=\"firebrick\"\n                    }\n                },\n                enter={\n                    tooltip={\n                        field=\"tooltip\"\n                    },\n                    size={\n                        value=50\n                    }\n                }\n            },\n            from={\n                data=\"nullX\"\n            },\n            type=\"symbol\"\n        },\n        {\n            encode={\n                update={\n                    align={\n                        value=\"right\"\n                    },\n                    x={\n                        offset=-4,\n                        signal=\"nullSize\"\n                    },\n                    fontSize={\n                        value=9\n                    },\n                    text={\n                        signal=\"datum.count + ' null'\"\n                    },\n                    baseline={\n                        value=\"top\"\n                    },\n                    fill={\n                        value=\"#999\"\n                    },\n                    y={\n                        offset=13,\n                        signal=\"height\"\n                    }\n                }\n            },\n            interactive=false,\n            from={\n                data=\"nullXY\"\n            },\n            type=\"text\"\n        }\n    ],\n    axes=[\n        {\n            format=\"s\",\n            offset=5,\n            title={\n                signal=\"xField\"\n            },\n            scale=\"xscale\",\n            orient=\"bottom\"\n        },\n        {\n            format=\"s\",\n            offset=5,\n            title={\n                signal=\"yField\"\n            },\n            scale=\"yscale\",\n            orient=\"left\"\n        }\n    ],\n    data=[\n        {\n            name=\"movies\",\n            values=dataset(\"movies\"),\n            transform=[\n                {\n                    as=\"tooltip\",\n                    expr=\"datum.Title + ' (' + (year(datum.Release_Date) || '?') + ')'\",\n                    type=\"formula\"\n                }\n            ]\n        },\n        {\n            name=\"valid\",\n            source=\"movies\",\n            transform=[\n                {\n                    expr=\"datum[xField] != null && datum[yField] != null\",\n                    type=\"filter\"\n                }\n            ]\n        },\n        {\n            name=\"nullXY\",\n            source=\"movies\",\n            transform=[\n                {\n                    expr=\"datum[xField] == null && datum[yField] == null\",\n                    type=\"filter\"\n                },\n                {\n                    type=\"aggregate\"\n                }\n            ]\n        },\n        {\n            name=\"nullY\",\n            source=\"movies\",\n            transform=[\n                {\n                    expr=\"datum[xField] != null && datum[yField] == null\",\n                    type=\"filter\"\n                }\n            ]\n        },\n        {\n            name=\"nullX\",\n            source=\"movies\",\n            transform=[\n                {\n                    expr=\"datum[xField] == null && datum[yField] != null\",\n                    type=\"filter\"\n                }\n            ]\n        }\n    ],\n    scales=[\n        {\n            name=\"yscale\",\n            nice=true,\n            range=[\n                {\n                    signal=\"height - nullGap\"\n                },\n                0\n            ],\n            domain={\n                data=\"valid\",\n                field={\n                    signal=\"yField\"\n                }\n            },\n            type=\"linear\"\n        },\n        {\n            name=\"xscale\",\n            nice=true,\n            range=[\n                {\n                    signal=\"nullGap\"\n                },\n                {\n                    signal=\"width\"\n                }\n            ],\n            domain={\n                data=\"valid\",\n                field={\n                    signal=\"xField\"\n                }\n            },\n            type=\"linear\"\n        }\n    ],\n    width=450,\n    autosize={\n        type=\"fit\",\n        resize=true\n    },\n    signals=[\n        {\n            name=\"yField\",\n            bind={\n                options=[\n                    \"IMDB_Rating\",\n                    \"Rotten_Tomatoes_Rating\",\n                    \"US_Gross\",\n                    \"Worldwide_Gross\"\n                ],\n                input=\"select\"\n            },\n            value=\"IMDB_Rating\"\n        },\n        {\n            name=\"xField\",\n            bind={\n                options=[\n                    \"IMDB_Rating\",\n                    \"Rotten_Tomatoes_Rating\",\n                    \"US_Gross\",\n                    \"Worldwide_Gross\"\n                ],\n                input=\"select\"\n            },\n            value=\"Rotten_Tomatoes_Rating\"\n        },\n        {\n            name=\"nullSize\",\n            value=8\n        },\n        {\n            name=\"nullGap\",\n            update=\"nullSize + 10\"\n        }\n    ]\n)","category":"page"},{"location":"examples/examples_vega_scatter_plots/#Connected-Scatter-Plot-1","page":"Scatter Plots","title":"Connected Scatter Plot","text":"","category":"section"},{"location":"examples/examples_vega_scatter_plots/#","page":"Scatter Plots","title":"Scatter Plots","text":"using Vega, VegaDatasets\n\n@vgplot(\n    height=500,\n    padding=5,\n    marks=[\n        {\n            encode={\n                enter={\n                    stroke={\n                        value=\"#000\"\n                    },\n                    interpolate={\n                        value=\"cardinal\"\n                    },\n                    x={\n                        field=\"miles\",\n                        scale=\"x\"\n                    },\n                    strokeWidth={\n                        value=3\n                    },\n                    y={\n                        field=\"gas\",\n                        scale=\"y\"\n                    }\n                }\n            },\n            from={\n                data=\"drive\"\n            },\n            type=\"line\"\n        },\n        {\n            encode={\n                enter={\n                    stroke={\n                        value=\"#000\"\n                    },\n                    x={\n                        field=\"miles\",\n                        scale=\"x\"\n                    },\n                    strokeWidth={\n                        value=1\n                    },\n                    size={\n                        value=49\n                    },\n                    fill={\n                        value=\"#fff\"\n                    },\n                    y={\n                        field=\"gas\",\n                        scale=\"y\"\n                    }\n                }\n            },\n            from={\n                data=\"drive\"\n            },\n            type=\"symbol\"\n        },\n        {\n            encode={\n                enter={\n                    align={\n                        field=\"side\",\n                        scale=\"align\"\n                    },\n                    x={\n                        field=\"miles\",\n                        scale=\"x\"\n                    },\n                    dy={\n                        field=\"side\",\n                        scale=\"dy\"\n                    },\n                    dx={\n                        field=\"side\",\n                        scale=\"dx\"\n                    },\n                    fill={\n                        value=\"#000\"\n                    },\n                    text={\n                        field=\"year\"\n                    },\n                    baseline={\n                        field=\"side\",\n                        scale=\"base\"\n                    },\n                    y={\n                        field=\"gas\",\n                        scale=\"y\"\n                    }\n                }\n            },\n            from={\n                data=\"drive\"\n            },\n            type=\"text\"\n        }\n    ],\n    config={\n        axis={\n            labelFontSize=12,\n            domain=false,\n            labelFontWeight=\"bold\",\n            tickSize=0\n        }\n    },\n    axes=[\n        {\n            tickCount=5,\n            grid=true,\n            scale=\"x\",\n            orient=\"top\"\n        },\n        {\n            labels=false,\n            title=\"Miles driven per capita each year\",\n            scale=\"x\",\n            orient=\"bottom\",\n            ticks=false\n        },\n        {\n            format=\"\\$0.2f\",\n            tickCount=5,\n            grid=true,\n            scale=\"y\",\n            orient=\"left\"\n        },\n        {\n            labels=false,\n            title=\"Price of a gallon of gasoline (adjusted for inflation)\",\n            scale=\"y\",\n            orient=\"right\",\n            ticks=false\n        }\n    ],\n    data=[:drive=>dataset(\"driving\")],\n    scales=[\n        {\n            name=\"x\",\n            nice=true,\n            zero=false,\n            range=\"width\",\n            domain={\n                data=\"drive\",\n                field=\"miles\"\n            },\n            type=\"linear\",\n            round=true\n        },\n        {\n            name=\"y\",\n            nice=true,\n            zero=false,\n            range=\"height\",\n            domain={\n                data=\"drive\",\n                field=\"gas\"\n            },\n            type=\"linear\",\n            round=true\n        },\n        {\n            name=\"align\",\n            range=[\n                \"right\",\n                \"left\",\n                \"center\",\n                \"center\"\n            ],\n            domain=[\n                \"left\",\n                \"right\",\n                \"top\",\n                \"bottom\"\n            ],\n            type=\"ordinal\"\n        },\n        {\n            name=\"base\",\n            range=[\n                \"middle\",\n                \"middle\",\n                \"bottom\",\n                \"top\"\n            ],\n            domain=[\n                \"left\",\n                \"right\",\n                \"top\",\n                \"bottom\"\n            ],\n            type=\"ordinal\"\n        },\n        {\n            name=\"dx\",\n            range=[\n                -7,\n                6,\n                0,\n                0\n            ],\n            domain=[\n                \"left\",\n                \"right\",\n                \"top\",\n                \"bottom\"\n            ],\n            type=\"ordinal\"\n        },\n        {\n            name=\"dy\",\n            range=[\n                1,\n                1,\n                -5,\n                6\n            ],\n            domain=[\n                \"left\",\n                \"right\",\n                \"top\",\n                \"bottom\"\n            ],\n            type=\"ordinal\"\n        }\n    ],\n    width=800\n)","category":"page"},{"location":"examples/examples_vega_scatter_plots/#Error-Bars-1","page":"Scatter Plots","title":"Error Bars","text":"","category":"section"},{"location":"examples/examples_vega_scatter_plots/#","page":"Scatter Plots","title":"Scatter Plots","text":"using Vega, VegaDatasets\n\n@vgplot(\n    height=160,\n    padding=5,\n    marks=[\n        {\n            encode={\n                update={\n                    x2={\n                        signal=\"datum[measure+'1']\",\n                        scale=\"xscale\"\n                    },\n                    x={\n                        signal=\"datum[measure+'0']\",\n                        scale=\"xscale\"\n                    },\n                    y={\n                        field=\"variety\",\n                        scale=\"yscale\",\n                        band=0.5\n                    }\n                },\n                enter={\n                    height={\n                        value=1\n                    },\n                    fill={\n                        value=\"black\"\n                    }\n                }\n            },\n            from={\n                data=\"summary\"\n            },\n            type=\"rect\"\n        },\n        {\n            encode={\n                update={\n                    x={\n                        field=\"mean\",\n                        scale=\"xscale\"\n                    },\n                    y={\n                        field=\"variety\",\n                        scale=\"yscale\",\n                        band=0.5\n                    }\n                },\n                enter={\n                    size={\n                        value=40\n                    },\n                    fill={\n                        value=\"black\"\n                    }\n                }\n            },\n            from={\n                data=\"summary\"\n            },\n            type=\"symbol\"\n        }\n    ],\n    config={\n        axisBand={\n            tickOffset=0,\n            tickExtra=true,\n            bandPosition=1\n        }\n    },\n    axes=[\n        {\n            zindex=1,\n            title=\"Barley Yield\",\n            scale=\"xscale\",\n            orient=\"bottom\"\n        },\n        {\n            tickCount=5,\n            zindex=1,\n            scale=\"yscale\",\n            orient=\"left\"\n        }\n    ],\n    data=[\n        :barley=>dataset(\"barley\"),\n        {\n            name=\"summary\",\n            source=\"barley\",\n            transform=[\n                {\n                    fields=[\n                        \"yield\",\n                        \"yield\",\n                        \"yield\",\n                        \"yield\",\n                        \"yield\",\n                        \"yield\",\n                        \"yield\"\n                    ],\n                    ops=[\n                        \"mean\",\n                        \"stdev\",\n                        \"stderr\",\n                        \"ci0\",\n                        \"ci1\",\n                        \"q1\",\n                        \"q3\"\n                    ],\n                    as=[\n                        \"mean\",\n                        \"stdev\",\n                        \"stderr\",\n                        \"ci0\",\n                        \"ci1\",\n                        \"iqr0\",\n                        \"iqr1\"\n                    ],\n                    groupby=[\n                        \"variety\"\n                    ],\n                    type=\"aggregate\"\n                },\n                {\n                    as=\"stdev0\",\n                    expr=\"datum.mean - datum.stdev\",\n                    type=\"formula\"\n                },\n                {\n                    as=\"stdev1\",\n                    expr=\"datum.mean + datum.stdev\",\n                    type=\"formula\"\n                },\n                {\n                    as=\"stderr0\",\n                    expr=\"datum.mean - datum.stderr\",\n                    type=\"formula\"\n                },\n                {\n                    as=\"stderr1\",\n                    expr=\"datum.mean + datum.stderr\",\n                    type=\"formula\"\n                }\n            ]\n        }\n    ],\n    scales=[\n        {\n            name=\"yscale\",\n            range=\"height\",\n            domain={\n                sort={\n                    order=\"descending\",\n                    field=\"mean\",\n                    op=\"max\"\n                },\n                data=\"summary\",\n                field=\"variety\"\n            },\n            type=\"band\"\n        },\n        {\n            name=\"xscale\",\n            zero=false,\n            nice=true,\n            range=\"width\",\n            domain={\n                fields=[\n                    \"stdev0\",\n                    \"stdev1\"\n                ],\n                data=\"summary\"\n            },\n            type=\"linear\",\n            round=true\n        }\n    ],\n    width=500,\n    signals=[\n        {\n            name=\"errorMeasure\",\n            bind={\n                options=[\n                    \"95% Confidence Interval\",\n                    \"Standard Error\",\n                    \"Standard Deviation\",\n                    \"Interquartile Range\"\n                ],\n                input=\"select\"\n            },\n            value=\"95% Confidence Interval\"\n        },\n        {\n            name=\"lookup\",\n            value={\n                var\"95% Confidence Interval\"=\"ci\",\n                var\"Standard Deviation\"=\"stdev\",\n                var\"Interquartile Range\"=\"iqr\",\n                var\"Standard Error\"=\"stderr\"\n            }\n        },\n        {\n            name=\"measure\",\n            update=\"lookup[errorMeasure]\"\n        }\n    ]\n)","category":"page"},{"location":"examples/examples_vega_scatter_plots/#Barley-Trellis-Plot-1","page":"Scatter Plots","title":"Barley Trellis Plot","text":"","category":"section"},{"location":"examples/examples_vega_scatter_plots/#","page":"Scatter Plots","title":"Scatter Plots","text":"using Vega, VegaDatasets\n\n@vgplot(\n    padding=5,\n    marks=[\n        {\n            name=\"site\",\n            marks=[\n                {\n                    encode={\n                        enter={\n                            stroke={\n                                field=\"year\",\n                                scale=\"cscale\"\n                            },\n                            x={\n                                field=\"yield\",\n                                scale=\"xscale\"\n                            },\n                            strokeWidth={\n                                value=2\n                            },\n                            size={\n                                value=50\n                            },\n                            y={\n                                field=\"variety\",\n                                scale=\"yscale\"\n                            }\n                        }\n                    },\n                    from={\n                        data=\"sites\"\n                    },\n                    type=\"symbol\"\n                }\n            ],\n            encode={\n                enter={\n                    height={\n                        signal=\"cellHeight\"\n                    },\n                    stroke={\n                        value=\"#ccc\"\n                    },\n                    width={\n                        signal=\"width\"\n                    },\n                    y={\n                        offset={\n                            signal=\"offset\"\n                        },\n                        field=\"site\",\n                        scale=\"gscale\"\n                    }\n                }\n            },\n            axes=[\n                {\n                    domain=false,\n                    encode={\n                        grid={\n                            enter={\n                                strokeDash={\n                                    value=[\n                                        3,\n                                        3\n                                    ]\n                                }\n                            }\n                        }\n                    },\n                    grid=true,\n                    scale=\"yscale\",\n                    orient=\"left\",\n                    tickSize=0\n                },\n                {\n                    domain=false,\n                    scale=\"yscale\",\n                    orient=\"right\",\n                    tickSize=0\n                }\n            ],\n            scales=[\n                {\n                    name=\"yscale\",\n                    padding=1,\n                    range=[\n                        0,\n                        {\n                            signal=\"cellHeight\"\n                        }\n                    ],\n                    domain={\n                        sort={\n                            order=\"descending\",\n                            field=\"yield\",\n                            op=\"median\"\n                        },\n                        data=\"barley\",\n                        field=\"variety\"\n                    },\n                    type=\"point\",\n                    round=true\n                }\n            ],\n            from={\n                facet={\n                    name=\"sites\",\n                    data=\"barley\",\n                    groupby=\"site\"\n                }\n            },\n            type=\"group\"\n        },\n        {\n            encode={\n                enter={\n                    fontWeight={\n                        value=\"bold\"\n                    },\n                    align={\n                        value=\"center\"\n                    },\n                    x={\n                        mult=0.5,\n                        field=\"width\"\n                    },\n                    fontSize={\n                        value=11\n                    },\n                    text={\n                        field=\"datum.site\"\n                    },\n                    baseline={\n                        value=\"bottom\"\n                    },\n                    fill={\n                        value=\"#000\"\n                    },\n                    y={\n                        field=\"y\"\n                    }\n                }\n            },\n            from={\n                data=\"site\"\n            },\n            type=\"text\"\n        }\n    ],\n    axes=[\n        {\n            zindex=1,\n            scale=\"xscale\",\n            orient=\"bottom\"\n        }\n    ],\n    data=[:barley=>dataset(\"barley\")],\n    scales=[\n        {\n            name=\"gscale\",\n            range=[\n                0,\n                {\n                    signal=\"height\"\n                }\n            ],\n            domain={\n                sort={\n                    order=\"descending\",\n                    field=\"yield\",\n                    op=\"median\"\n                },\n                data=\"barley\",\n                field=\"site\"\n            },\n            type=\"band\",\n            round=true\n        },\n        {\n            name=\"xscale\",\n            nice=true,\n            range=\"width\",\n            domain={\n                data=\"barley\",\n                field=\"yield\"\n            },\n            type=\"linear\",\n            round=true\n        },\n        {\n            name=\"cscale\",\n            range=\"category\",\n            domain={\n                data=\"barley\",\n                field=\"year\"\n            },\n            type=\"ordinal\"\n        }\n    ],\n    width=200,\n    signals=[\n        {\n            name=\"offset\",\n            value=15\n        },\n        {\n            name=\"cellHeight\",\n            value=100\n        },\n        {\n            name=\"height\",\n            update=\"6 * (offset + cellHeight)\"\n        }\n    ],\n    legends=[\n        {\n            stroke=\"cscale\",\n            padding=4,\n            encode={\n                symbols={\n                    enter={\n                        strokeWidth={\n                            value=2\n                        },\n                        size={\n                            value=50\n                        }\n                    }\n                }\n            },\n            title=\"Year\"\n        }\n    ]\n)","category":"page"},{"location":"examples/examples_vega_scatter_plots/#Regression-1","page":"Scatter Plots","title":"Regression","text":"","category":"section"},{"location":"examples/examples_vega_scatter_plots/#","page":"Scatter Plots","title":"Scatter Plots","text":"using Vega, VegaDatasets\n\n@vgplot(\n    height=500,\n    padding=5,\n    marks=[\n        {\n            encode={\n                enter={\n                    x={\n                        field=\"Rotten_Tomatoes_Rating\",\n                        scale=\"x\"\n                    },\n                    fillOpacity={\n                        value=0.5\n                    },\n                    size={\n                        value=16\n                    },\n                    y={\n                        field=\"IMDB_Rating\",\n                        scale=\"y\"\n                    }\n                }\n            },\n            from={\n                data=\"movies\"\n            },\n            type=\"symbol\"\n        },\n        {\n            marks=[\n                {\n                    encode={\n                        enter={\n                            stroke={\n                                value=\"firebrick\"\n                            },\n                            x={\n                                field=\"u\",\n                                scale=\"x\"\n                            },\n                            y={\n                                field=\"v\",\n                                scale=\"y\"\n                            }\n                        }\n                    },\n                    from={\n                        data=\"curve\"\n                    },\n                    type=\"line\"\n                }\n            ],\n            from={\n                facet={\n                    name=\"curve\",\n                    data=\"trend\",\n                    groupby=\"Major_Genre\"\n                }\n            },\n            type=\"group\"\n        }\n    ],\n    data=[\n        {\n            name=\"movies\",\n            values=dataset(\"movies\"),\n            transform=[\n                {\n                    expr=\"datum.Rotten_Tomatoes_Rating != null && datum.IMDB_Rating != null\",\n                    type=\"filter\"\n                }\n            ]\n        },\n        {\n            name=\"trend\",\n            source=\"movies\",\n            transform=[\n                {\n                    method={\n                        signal=\"method\"\n                    },\n                    order={\n                        signal=\"polyOrder\"\n                    },\n                    x=\"Rotten_Tomatoes_Rating\",\n                    as=[\n                        \"u\",\n                        \"v\"\n                    ],\n                    groupby=[\n                        {\n                            signal=\"groupby === 'genre' ? 'Major_Genre' : 'foo'\"\n                        }\n                    ],\n                    type=\"regression\",\n                    extent={\n                        signal=\"domain('x')\"\n                    },\n                    y=\"IMDB_Rating\"\n                }\n            ]\n        }\n    ],\n    scales=[\n        {\n            name=\"x\",\n            range=\"width\",\n            domain={\n                data=\"movies\",\n                field=\"Rotten_Tomatoes_Rating\"\n            },\n            type=\"linear\"\n        },\n        {\n            name=\"y\",\n            range=\"height\",\n            domain={\n                data=\"movies\",\n                field=\"IMDB_Rating\"\n            },\n            type=\"linear\"\n        }\n    ],\n    width=500,\n    autosize=\"pad\",\n    signals=[\n        {\n            name=\"method\",\n            bind={\n                options=[\n                    \"linear\",\n                    \"log\",\n                    \"exp\",\n                    \"pow\",\n                    \"quad\",\n                    \"poly\"\n                ],\n                input=\"select\"\n            },\n            value=\"linear\"\n        },\n        {\n            name=\"polyOrder\",\n            bind={\n                step=1,\n                max=10,\n                min=1,\n                input=\"range\"\n            },\n            value=3\n        },\n        {\n            name=\"groupby\",\n            bind={\n                options=[\n                    \"none\",\n                    \"genre\"\n                ],\n                input=\"select\"\n            },\n            value=\"none\"\n        }\n    ]\n)","category":"page"},{"location":"examples/examples_vega_scatter_plots/#Loess-Regression-1","page":"Scatter Plots","title":"Loess Regression","text":"","category":"section"},{"location":"examples/examples_vega_scatter_plots/#","page":"Scatter Plots","title":"Scatter Plots","text":"using Vega, VegaDatasets\n\n@vgplot(\n    height=500,\n    padding=5,\n    marks=[\n        {\n            encode={\n                enter={\n                    x={\n                        field=\"Rotten_Tomatoes_Rating\",\n                        scale=\"x\"\n                    },\n                    fillOpacity={\n                        value=0.5\n                    },\n                    size={\n                        value=16\n                    },\n                    y={\n                        field=\"IMDB_Rating\",\n                        scale=\"y\"\n                    }\n                }\n            },\n            from={\n                data=\"movies\"\n            },\n            type=\"symbol\"\n        },\n        {\n            marks=[\n                {\n                    encode={\n                        enter={\n                            stroke={\n                                value=\"firebrick\"\n                            },\n                            x={\n                                field=\"u\",\n                                scale=\"x\"\n                            },\n                            y={\n                                field=\"v\",\n                                scale=\"y\"\n                            }\n                        }\n                    },\n                    from={\n                        data=\"curve\"\n                    },\n                    type=\"line\"\n                }\n            ],\n            from={\n                facet={\n                    name=\"curve\",\n                    data=\"trend\",\n                    groupby=\"Major_Genre\"\n                }\n            },\n            type=\"group\"\n        }\n    ],\n    data=[\n        {\n            name=\"movies\",\n            values=dataset(\"movies\"),\n            transform=[\n                {\n                    expr=\"datum.Rotten_Tomatoes_Rating != null && datum.IMDB_Rating != null\",\n                    type=\"filter\"\n                }\n            ]\n        },\n        {\n            name=\"trend\",\n            source=\"movies\",\n            transform=[\n                {\n                    bandwidth={\n                        signal=\"loessBandwidth\"\n                    },\n                    x=\"Rotten_Tomatoes_Rating\",\n                    as=[\n                        \"u\",\n                        \"v\"\n                    ],\n                    groupby=[\n                        {\n                            signal=\"groupby === 'genre' ? 'Major_Genre' : 'foo'\"\n                        }\n                    ],\n                    type=\"loess\",\n                    y=\"IMDB_Rating\"\n                }\n            ]\n        }\n    ],\n    scales=[\n        {\n            name=\"x\",\n            range=\"width\",\n            domain={\n                data=\"movies\",\n                field=\"Rotten_Tomatoes_Rating\"\n            },\n            type=\"linear\"\n        },\n        {\n            name=\"y\",\n            range=\"height\",\n            domain={\n                data=\"movies\",\n                field=\"IMDB_Rating\"\n            },\n            type=\"linear\"\n        }\n    ],\n    width=500,\n    autosize=\"pad\",\n    signals=[\n        {\n            name=\"loessBandwidth\",\n            bind={\n                max=1,\n                min=0.05,\n                input=\"range\"\n            },\n            value=0.3\n        },\n        {\n            name=\"groupby\",\n            bind={\n                options=[\n                    \"none\",\n                    \"genre\"\n                ],\n                input=\"select\"\n            },\n            value=\"none\"\n        }\n    ]\n)","category":"page"},{"location":"referencemanual/output/#Output-1","page":"Outputs","title":"Output","text":"","category":"section"},{"location":"referencemanual/output/#Saving-to-a-file-1","page":"Outputs","title":"Saving to a file","text":"","category":"section"},{"location":"referencemanual/output/#","page":"Outputs","title":"Outputs","text":"Use the save (reexported from Vega.jl) function from the FileIO.jl package to save plots.","category":"page"},{"location":"referencemanual/output/#","page":"Outputs","title":"Outputs","text":"For example, to save a plot named p, you can use the following type of code:","category":"page"},{"location":"referencemanual/output/#","page":"Outputs","title":"Outputs","text":"p |> save(\"figure.png\")\np |> save(\"figure.svg\")\np |> save(\"figure.pdf\")\np |> save(\"figure.eps\")\np |> save(\"figure.vega\")","category":"page"},{"location":"examples/examples_vega_bar_charts/#Bar-Charts-1","page":"Bar Charts","title":"Bar Charts","text":"","category":"section"},{"location":"examples/examples_vega_bar_charts/#Bar-Chart-1","page":"Bar Charts","title":"Bar Chart","text":"","category":"section"},{"location":"examples/examples_vega_bar_charts/#","page":"Bar Charts","title":"Bar Charts","text":"using Vega\n\n@vgplot(\n    height=200,\n    padding=5,\n    marks=[\n        {\n            encode={\n                update={\n                    fill={\n                        value=\"steelblue\"\n                    }\n                },\n                hover={\n                    fill={\n                        value=\"red\"\n                    }\n                },\n                enter={\n                    x={\n                        field=\"category\",\n                        scale=\"xscale\"\n                    },\n                    y2={\n                        value=0,\n                        scale=\"yscale\"\n                    },\n                    width={\n                        scale=\"xscale\",\n                        band=1\n                    },\n                    y={\n                        field=\"amount\",\n                        scale=\"yscale\"\n                    }\n                }\n            },\n            from={\n                data=\"table\"\n            },\n            type=\"rect\"\n        },\n        {\n            encode={\n                update={\n                    x={\n                        signal=\"tooltip.category\",\n                        scale=\"xscale\",\n                        band=0.5\n                    },\n                    fillOpacity=[\n                        {\n                            test=\"datum === tooltip\",\n                            value=0\n                        },\n                        {\n                            value=1\n                        }\n                    ],\n                    text={\n                        signal=\"tooltip.amount\"\n                    },\n                    y={\n                        offset=-2,\n                        signal=\"tooltip.amount\",\n                        scale=\"yscale\"\n                    }\n                },\n                enter={\n                    fill={\n                        value=\"#333\"\n                    },\n                    baseline={\n                        value=\"bottom\"\n                    },\n                    align={\n                        value=\"center\"\n                    }\n                }\n            },\n            type=\"text\"\n        }\n    ],\n    axes=[\n        {\n            scale=\"xscale\",\n            orient=\"bottom\"\n        },\n        {\n            scale=\"yscale\",\n            orient=\"left\"\n        }\n    ],\n    data=[\n        {\n            name=\"table\",\n            values=[\n                {\n                    amount=28,\n                    category=\"A\"\n                },\n                {\n                    amount=55,\n                    category=\"B\"\n                },\n                {\n                    amount=43,\n                    category=\"C\"\n                },\n                {\n                    amount=91,\n                    category=\"D\"\n                },\n                {\n                    amount=81,\n                    category=\"E\"\n                },\n                {\n                    amount=53,\n                    category=\"F\"\n                },\n                {\n                    amount=19,\n                    category=\"G\"\n                },\n                {\n                    amount=87,\n                    category=\"H\"\n                }\n            ]\n        }\n    ],\n    scales=[\n        {\n            name=\"xscale\",\n            padding=0.05,\n            range=\"width\",\n            domain={\n                data=\"table\",\n                field=\"category\"\n            },\n            type=\"band\",\n            round=true\n        },\n        {\n            name=\"yscale\",\n            nice=true,\n            range=\"height\",\n            domain={\n                data=\"table\",\n                field=\"amount\"\n            }\n        }\n    ],\n    width=400,\n    signals=[\n        {\n            name=\"tooltip\",\n            on=[\n                {\n                    events=\"rect:mouseover\",\n                    update=\"datum\"\n                },\n                {\n                    events=\"rect:mouseout\",\n                    update=\"{}\"\n                }\n            ],\n            value={\n\n            }\n        }\n    ]\n)","category":"page"},{"location":"examples/examples_vega_bar_charts/#Stacked-Bar-Chart-1","page":"Bar Charts","title":"Stacked Bar Chart","text":"","category":"section"},{"location":"examples/examples_vega_bar_charts/#","page":"Bar Charts","title":"Bar Charts","text":"using Vega\n\n@vgplot(    \n    height=200,\n    padding=5,\n    marks=[\n        {\n            encode={\n                update={\n                    fillOpacity={\n                        value=1\n                    }\n                },\n                hover={\n                    fillOpacity={\n                        value=0.5\n                    }\n                },\n                enter={\n                    x={\n                        field=\"x\",\n                        scale=\"x\"\n                    },\n                    y2={\n                        field=\"y1\",\n                        scale=\"y\"\n                    },\n                    width={\n                        offset=-1,\n                        scale=\"x\",\n                        band=1\n                    },\n                    fill={\n                        field=\"c\",\n                        scale=\"color\"\n                    },\n                    y={\n                        field=\"y0\",\n                        scale=\"y\"\n                    }\n                }\n            },\n            from={\n                data=\"table\"\n            },\n            type=\"rect\"\n        }\n    ],\n    axes=[\n        {\n            zindex=1,\n            scale=\"x\",\n            orient=\"bottom\"\n        },\n        {\n            zindex=1,\n            scale=\"y\",\n            orient=\"left\"\n        }\n    ],\n    data=[\n        {\n            name=\"table\",\n            values=[\n                {\n                    c=0,\n                    x=0,\n                    y=28\n                },\n                {\n                    c=1,\n                    x=0,\n                    y=55\n                },\n                {\n                    c=0,\n                    x=1,\n                    y=43\n                },\n                {\n                    c=1,\n                    x=1,\n                    y=91\n                },\n                {\n                    c=0,\n                    x=2,\n                    y=81\n                },\n                {\n                    c=1,\n                    x=2,\n                    y=53\n                },\n                {\n                    c=0,\n                    x=3,\n                    y=19\n                },\n                {\n                    c=1,\n                    x=3,\n                    y=87\n                },\n                {\n                    c=0,\n                    x=4,\n                    y=52\n                },\n                {\n                    c=1,\n                    x=4,\n                    y=48\n                },\n                {\n                    c=0,\n                    x=5,\n                    y=24\n                },\n                {\n                    c=1,\n                    x=5,\n                    y=49\n                },\n                {\n                    c=0,\n                    x=6,\n                    y=87\n                },\n                {\n                    c=1,\n                    x=6,\n                    y=66\n                },\n                {\n                    c=0,\n                    x=7,\n                    y=17\n                },\n                {\n                    c=1,\n                    x=7,\n                    y=27\n                },\n                {\n                    c=0,\n                    x=8,\n                    y=68\n                },\n                {\n                    c=1,\n                    x=8,\n                    y=16\n                },\n                {\n                    c=0,\n                    x=9,\n                    y=49\n                },\n                {\n                    c=1,\n                    x=9,\n                    y=15\n                }\n            ],\n            transform=[\n                {\n                    sort={\n                        field=\"c\"\n                    },\n                    field=\"y\",\n                    groupby=[\n                        \"x\"\n                    ],\n                    type=\"stack\"\n                }\n            ]\n        }\n    ],\n    scales=[\n        {\n            name=\"x\",\n            range=\"width\",\n            domain={\n                data=\"table\",\n                field=\"x\"\n            },\n            type=\"band\"\n        },\n        {\n            name=\"y\",\n            nice=true,\n            zero=true,\n            range=\"height\",\n            domain={\n                data=\"table\",\n                field=\"y1\"\n            },\n            type=\"linear\"\n        },\n        {\n            name=\"color\",\n            range=\"category\",\n            domain={\n                data=\"table\",\n                field=\"c\"\n            },\n            type=\"ordinal\"\n        }\n    ],\n    width=500\n)","category":"page"},{"location":"examples/examples_vega_bar_charts/#Grouped-Bar-Chart-1","page":"Bar Charts","title":"Grouped Bar Chart","text":"","category":"section"},{"location":"examples/examples_vega_bar_charts/#","page":"Bar Charts","title":"Bar Charts","text":"using Vega\n\n@vgplot(\n    height=240,\n    padding=5,\n    marks=[\n        {\n            marks=[\n                {\n                    name=\"bars\",\n                    encode={\n                        enter={\n                            height={\n                                scale=\"pos\",\n                                band=1\n                            },\n                            x2={\n                                value=0,\n                                scale=\"xscale\"\n                            },\n                            x={\n                                field=\"value\",\n                                scale=\"xscale\"\n                            },\n                            fill={\n                                field=\"position\",\n                                scale=\"color\"\n                            },\n                            y={\n                                field=\"position\",\n                                scale=\"pos\"\n                            }\n                        }\n                    },\n                    from={\n                        data=\"facet\"\n                    },\n                    type=\"rect\"\n                },\n                {\n                    encode={\n                        enter={\n                            align={\n                                value=\"right\"\n                            },\n                            x={\n                                offset=-5,\n                                field=\"x2\"\n                            },\n                            fill=[\n                                {\n                                    test=\"contrast('white', datum.fill) > contrast('black', datum.fill)\",\n                                    value=\"white\"\n                                },\n                                {\n                                    value=\"black\"\n                                }\n                            ],\n                            baseline={\n                                value=\"middle\"\n                            },\n                            text={\n                                field=\"datum.value\"\n                            },\n                            y={\n                                offset={\n                                    mult=0.5,\n                                    field=\"height\"\n                                },\n                                field=\"y\"\n                            }\n                        }\n                    },\n                    from={\n                        data=\"bars\"\n                    },\n                    type=\"text\"\n                }\n            ],\n            encode={\n                enter={\n                    y={\n                        field=\"category\",\n                        scale=\"yscale\"\n                    }\n                }\n            },\n            scales=[\n                {\n                    name=\"pos\",\n                    range=\"height\",\n                    domain={\n                        data=\"facet\",\n                        field=\"position\"\n                    },\n                    type=\"band\"\n                }\n            ],\n            signals=[\n                {\n                    name=\"height\",\n                    update=\"bandwidth('yscale')\"\n                }\n            ],\n            from={\n                facet={\n                    name=\"facet\",\n                    data=\"table\",\n                    groupby=\"category\"\n                }\n            },\n            type=\"group\"\n        }\n    ],\n    axes=[\n        {\n            labelPadding=4,\n            zindex=1,\n            scale=\"yscale\",\n            orient=\"left\",\n            tickSize=0\n        },\n        {\n            scale=\"xscale\",\n            orient=\"bottom\"\n        }\n    ],\n    data=[\n        {\n            name=\"table\",\n            values=[\n                {\n                    position=0,\n                    value=0.1,\n                    category=\"A\"\n                },\n                {\n                    position=1,\n                    value=0.6,\n                    category=\"A\"\n                },\n                {\n                    position=2,\n                    value=0.9,\n                    category=\"A\"\n                },\n                {\n                    position=3,\n                    value=0.4,\n                    category=\"A\"\n                },\n                {\n                    position=0,\n                    value=0.7,\n                    category=\"B\"\n                },\n                {\n                    position=1,\n                    value=0.2,\n                    category=\"B\"\n                },\n                {\n                    position=2,\n                    value=1.1,\n                    category=\"B\"\n                },\n                {\n                    position=3,\n                    value=0.8,\n                    category=\"B\"\n                },\n                {\n                    position=0,\n                    value=0.6,\n                    category=\"C\"\n                },\n                {\n                    position=1,\n                    value=0.1,\n                    category=\"C\"\n                },\n                {\n                    position=2,\n                    value=0.2,\n                    category=\"C\"\n                },\n                {\n                    position=3,\n                    value=0.7,\n                    category=\"C\"\n                }\n            ]\n        }\n    ],\n    scales=[\n        {\n            name=\"yscale\",\n            padding=0.2,\n            range=\"height\",\n            domain={\n                data=\"table\",\n                field=\"category\"\n            },\n            type=\"band\"\n        },\n        {\n            name=\"xscale\",\n            zero=true,\n            nice=true,\n            range=\"width\",\n            domain={\n                data=\"table\",\n                field=\"value\"\n            },\n            type=\"linear\",\n            round=true\n        },\n        {\n            name=\"color\",\n            range={\n                scheme=\"category20\"\n            },\n            domain={\n                data=\"table\",\n                field=\"position\"\n            },\n            type=\"ordinal\"\n        }\n    ],\n    width=300\n)","category":"page"},{"location":"examples/examples_vega_bar_charts/#Nested-Bar-Chart-1","page":"Bar Charts","title":"Nested Bar Chart","text":"","category":"section"},{"location":"examples/examples_vega_bar_charts/#","page":"Bar Charts","title":"Bar Charts","text":"using Vega\n\n@vgplot(\n    padding=5,\n    marks=[\n        {\n            marks=[\n                {\n                    encode={\n                        update={\n                            height={\n                                scale=\"yscale\",\n                                band=1\n                            },\n                            stroke={\n                                value=nothing\n                            },\n                            zindex={\n                                value=0\n                            },\n                            y={\n                                field=\"b\",\n                                scale=\"yscale\"\n                            }\n                        },\n                        hover={\n                            stroke={\n                                value=\"firebrick\"\n                            },\n                            zindex={\n                                value=1\n                            }\n                        },\n                        enter={\n                            x2={\n                                field=\"c\",\n                                scale=\"xscale\"\n                            },\n                            x={\n                                value=0\n                            },\n                            strokeWidth={\n                                value=2\n                            },\n                            fill={\n                                field=\"a\",\n                                scale=\"color\"\n                            }\n                        }\n                    },\n                    from={\n                        data=\"faceted_tuples\"\n                    },\n                    type=\"rect\"\n                }\n            ],\n            encode={\n                update={\n                    y2={\n                        field=\"y1\"\n                    },\n                    y={\n                        field=\"y0\"\n                    }\n                },\n                enter={\n                    x={\n                        value=0\n                    },\n                    width={\n                        signal=\"width\"\n                    }\n                }\n            },\n            axes=[\n                {\n                    domain=false,\n                    labelPadding=4,\n                    scale=\"yscale\",\n                    orient=\"left\",\n                    ticks=false\n                }\n            ],\n            scales=[\n                {\n                    name=\"yscale\",\n                    paddingOuter={\n                        signal=\"outerPadding\"\n                    },\n                    paddingInner={\n                        signal=\"innerPadding\"\n                    },\n                    domain={\n                        data=\"faceted_tuples\",\n                        field=\"b\"\n                    },\n                    range={\n                        step={\n                            signal=\"rangeStep\"\n                        }\n                    },\n                    type=\"band\",\n                    round=true\n                }\n            ],\n            from={\n                data=\"trellis\",\n                facet={\n                    name=\"faceted_tuples\",\n                    data=\"tuples\",\n                    groupby=\"a\"\n                }\n            },\n            type=\"group\"\n        }\n    ],\n    axes=[\n        {\n            domain=true,\n            scale=\"xscale\",\n            orient=\"bottom\"\n        }\n    ],\n    data=[\n        {\n            name=\"tuples\",\n            values=[\n                {\n                    c=6.3,\n                    b=\"a\",\n                    a=0\n                },\n                {\n                    c=4.2,\n                    b=\"a\",\n                    a=0\n                },\n                {\n                    c=6.8,\n                    b=\"b\",\n                    a=0\n                },\n                {\n                    c=5.1,\n                    b=\"c\",\n                    a=0\n                },\n                {\n                    c=4.4,\n                    b=\"b\",\n                    a=1\n                },\n                {\n                    c=3.5,\n                    b=\"b\",\n                    a=2\n                },\n                {\n                    c=6.2,\n                    b=\"c\",\n                    a=2\n                }\n            ],\n            transform=[\n                {\n                    fields=[\n                        \"c\"\n                    ],\n                    ops=[\n                        \"average\"\n                    ],\n                    as=[\n                        \"c\"\n                    ],\n                    groupby=[\n                        \"a\",\n                        \"b\"\n                    ],\n                    type=\"aggregate\"\n                }\n            ]\n        },\n        {\n            name=\"trellis\",\n            source=\"tuples\",\n            transform=[\n                {\n                    groupby=[\n                        \"a\"\n                    ],\n                    type=\"aggregate\"\n                },\n                {\n                    as=\"span\",\n                    expr=\"rangeStep * bandspace(datum.count, innerPadding, outerPadding)\",\n                    type=\"formula\"\n                },\n                {\n                    field=\"span\",\n                    type=\"stack\"\n                },\n                {\n                    field=\"y1\",\n                    signal=\"trellisExtent\",\n                    type=\"extent\"\n                }\n            ]\n        }\n    ],\n    scales=[\n        {\n            name=\"xscale\",\n            nice=true,\n            zero=true,\n            range=\"width\",\n            domain={\n                data=\"tuples\",\n                field=\"c\"\n            },\n            round=true\n        },\n        {\n            name=\"color\",\n            range=\"category\",\n            domain={\n                data=\"trellis\",\n                field=\"a\"\n            },\n            type=\"ordinal\"\n        }\n    ],\n    width=300,\n    autosize=\"pad\",\n    signals=[\n        {\n            name=\"rangeStep\",\n            bind={\n                step=1,\n                max=50,\n                min=5,\n                input=\"range\"\n            },\n            value=20\n        },\n        {\n            name=\"innerPadding\",\n            bind={\n                step=0.01,\n                max=0.7,\n                min=0,\n                input=\"range\"\n            },\n            value=0.1\n        },\n        {\n            name=\"outerPadding\",\n            bind={\n                step=0.01,\n                max=0.4,\n                min=0,\n                input=\"range\"\n            },\n            value=0.2\n        },\n        {\n            name=\"height\",\n            update=\"trellisExtent[1]\"\n        }\n    ]\n)","category":"page"},{"location":"examples/examples_vega_bar_charts/#Population-Pyramid-1","page":"Bar Charts","title":"Population Pyramid","text":"","category":"section"},{"location":"examples/examples_vega_bar_charts/#","page":"Bar Charts","title":"Bar Charts","text":"using Vega, VegaDatasets\n\n@vgplot(\n    height=400,\n    padding=5,\n    marks=[\n        {\n            encode={\n                enter={\n                    align={\n                        value=\"center\"\n                    },\n                    x={\n                        signal=\"chartWidth + chartPad / 2\"\n                    },\n                    text={\n                        field=\"age\"\n                    },\n                    baseline={\n                        value=\"middle\"\n                    },\n                    fill={\n                        value=\"#000\"\n                    },\n                    y={\n                        field=\"age\",\n                        scale=\"y\",\n                        band=0.5\n                    }\n                }\n            },\n            interactive=false,\n            from={\n                data=\"ageGroups\"\n            },\n            type=\"text\"\n        },\n        {\n            marks=[\n                {\n                    encode={\n                        enter={\n                            height={\n                                offset=-1,\n                                scale=\"y\",\n                                band=1\n                            },\n                            x2={\n                                value=0,\n                                scale=\"x\"\n                            },\n                            x={\n                                field=\"people\",\n                                scale=\"x\"\n                            },\n                            fillOpacity={\n                                value=0.6\n                            },\n                            fill={\n                                field=\"sex\",\n                                scale=\"c\"\n                            },\n                            y={\n                                field=\"age\",\n                                scale=\"y\"\n                            }\n                        }\n                    },\n                    from={\n                        data=\"females\"\n                    },\n                    type=\"rect\"\n                }\n            ],\n            encode={\n                update={\n                    height={\n                        signal=\"height\"\n                    },\n                    x={\n                        value=0\n                    }\n                }\n            },\n            axes=[\n                {\n                    format=\"s\",\n                    title=\"Females\",\n                    scale=\"x\",\n                    orient=\"bottom\"\n                }\n            ],\n            scales=[\n                {\n                    name=\"x\",\n                    nice=true,\n                    zero=true,\n                    range=[\n                        {\n                            signal=\"chartWidth\"\n                        },\n                        0\n                    ],\n                    domain={\n                        data=\"population\",\n                        field=\"people\"\n                    },\n                    type=\"linear\"\n                }\n            ],\n            type=\"group\"\n        },\n        {\n            marks=[\n                {\n                    encode={\n                        enter={\n                            height={\n                                offset=-1,\n                                scale=\"y\",\n                                band=1\n                            },\n                            x2={\n                                value=0,\n                                scale=\"x\"\n                            },\n                            x={\n                                field=\"people\",\n                                scale=\"x\"\n                            },\n                            fillOpacity={\n                                value=0.6\n                            },\n                            fill={\n                                field=\"sex\",\n                                scale=\"c\"\n                            },\n                            y={\n                                field=\"age\",\n                                scale=\"y\"\n                            }\n                        }\n                    },\n                    from={\n                        data=\"males\"\n                    },\n                    type=\"rect\"\n                }\n            ],\n            encode={\n                update={\n                    height={\n                        signal=\"height\"\n                    },\n                    x={\n                        signal=\"chartWidth + chartPad\"\n                    }\n                }\n            },\n            axes=[\n                {\n                    format=\"s\",\n                    title=\"Males\",\n                    scale=\"x\",\n                    orient=\"bottom\"\n                }\n            ],\n            scales=[\n                {\n                    name=\"x\",\n                    nice=true,\n                    zero=true,\n                    range=[\n                        0,\n                        {\n                            signal=\"chartWidth\"\n                        }\n                    ],\n                    domain={\n                        data=\"population\",\n                        field=\"people\"\n                    },\n                    type=\"linear\"\n                }\n            ],\n            type=\"group\"\n        }\n    ],\n    data=[\n        :population => dataset(\"population\"),\n        {\n            name=\"popYear\",\n            source=\"population\",\n            transform=[\n                {\n                    expr=\"datum.year == year\",\n                    type=\"filter\"\n                }\n            ]\n        },\n        {\n            name=\"males\",\n            source=\"popYear\",\n            transform=[\n                {\n                    expr=\"datum.sex == 1\",\n                    type=\"filter\"\n                }\n            ]\n        },\n        {\n            name=\"females\",\n            source=\"popYear\",\n            transform=[\n                {\n                    expr=\"datum.sex == 2\",\n                    type=\"filter\"\n                }\n            ]\n        },\n        {\n            name=\"ageGroups\",\n            source=\"population\",\n            transform=[\n                {\n                    groupby=[\n                        \"age\"\n                    ],\n                    type=\"aggregate\"\n                }\n            ]\n        }\n    ],\n    scales=[\n        {\n            name=\"y\",\n            range=[\n                {\n                    signal=\"height\"\n                },\n                0\n            ],\n            domain={\n                data=\"ageGroups\",\n                field=\"age\"\n            },\n            type=\"band\",\n            round=true\n        },\n        {\n            name=\"c\",\n            range=[\n                \"#d5855a\",\n                \"#6c4e97\"\n            ],\n            domain=[\n                1,\n                2\n            ],\n            type=\"ordinal\"\n        }\n    ],\n    signals=[\n        {\n            name=\"chartWidth\",\n            value=300\n        },\n        {\n            name=\"chartPad\",\n            value=20\n        },\n        {\n            name=\"width\",\n            update=\"2 * chartWidth + chartPad\"\n        },\n        {\n            name=\"year\",\n            bind={\n                step=10,\n                max=2000,\n                min=1850,\n                input=\"range\"\n            },\n            value=2000\n        }\n    ]\n)","category":"page"},{"location":"#Vega.jl-1","page":"Home","title":"Vega.jl","text":"","category":"section"},{"location":"examples/examples_vega_tree_diagrams/#Tree-Diagrams-1","page":"Tree Diagrams","title":"Tree Diagrams","text":"","category":"section"},{"location":"examples/examples_vega_tree_diagrams/#Tree-Layout-1","page":"Tree Diagrams","title":"Tree Layout","text":"","category":"section"},{"location":"examples/examples_vega_tree_diagrams/#","page":"Tree Diagrams","title":"Tree Diagrams","text":"using Vega, VegaDatasets\n\n@vgplot(\n    height=1600,\n    padding=5,\n    marks=[\n        {\n            encode={\n                update={\n                    stroke={\n                        value=\"#ccc\"\n                    },\n                    path={\n                        field=\"path\"\n                    }\n                }\n            },\n            from={\n                data=\"links\"\n            },\n            type=\"path\"\n        },\n        {\n            encode={\n                update={\n                    x={\n                        field=\"x\"\n                    },\n                    fill={\n                        field=\"depth\",\n                        scale=\"color\"\n                    },\n                    y={\n                        field=\"y\"\n                    }\n                },\n                enter={\n                    stroke={\n                        value=\"#fff\"\n                    },\n                    size={\n                        value=100\n                    }\n                }\n            },\n            from={\n                data=\"tree\"\n            },\n            type=\"symbol\"\n        },\n        {\n            encode={\n                update={\n                    align={\n                        signal=\"datum.children ? 'right' : 'left'\"\n                    },\n                    x={\n                        field=\"x\"\n                    },\n                    dx={\n                        signal=\"datum.children ? -7 : 7\"\n                    },\n                    opacity={\n                        signal=\"labels ? 1 : 0\"\n                    },\n                    y={\n                        field=\"y\"\n                    }\n                },\n                enter={\n                    fontSize={\n                        value=9\n                    },\n                    text={\n                        field=\"name\"\n                    },\n                    baseline={\n                        value=\"middle\"\n                    }\n                }\n            },\n            from={\n                data=\"tree\"\n            },\n            type=\"text\"\n        }\n    ],\n    data=[\n        {\n            name=\"tree\",\n            values=dataset(\"flare\"),\n            transform=[\n                {\n                    key=\"id\",\n                    parentKey=\"parent\",\n                    type=\"stratify\"\n                },\n                {\n                    method={\n                        signal=\"layout\"\n                    },\n                    separation={\n                        signal=\"separation\"\n                    },\n                    as=[\n                        \"y\",\n                        \"x\",\n                        \"depth\",\n                        \"children\"\n                    ],\n                    size=[\n                        {\n                            signal=\"height\"\n                        },\n                        {\n                            signal=\"width - 100\"\n                        }\n                    ],\n                    type=\"tree\"\n                }\n            ]\n        },\n        {\n            name=\"links\",\n            source=\"tree\",\n            transform=[\n                {\n                    type=\"treelinks\"\n                },\n                {\n                    shape={\n                        signal=\"links\"\n                    },\n                    type=\"linkpath\",\n                    orient=\"horizontal\"\n                }\n            ]\n        }\n    ],\n    scales=[\n        {\n            name=\"color\",\n            zero=true,\n            range={\n                scheme=\"magma\"\n            },\n            domain={\n                data=\"tree\",\n                field=\"depth\"\n            },\n            type=\"linear\"\n        }\n    ],\n    width=600,\n    signals=[\n        {\n            name=\"labels\",\n            bind={\n                input=\"checkbox\"\n            },\n            value=true\n        },\n        {\n            name=\"layout\",\n            bind={\n                options=[\n                    \"tidy\",\n                    \"cluster\"\n                ],\n                input=\"radio\"\n            },\n            value=\"tidy\"\n        },\n        {\n            name=\"links\",\n            bind={\n                options=[\n                    \"line\",\n                    \"curve\",\n                    \"diagonal\",\n                    \"orthogonal\"\n                ],\n                input=\"select\"\n            },\n            value=\"diagonal\"\n        },\n        {\n            name=\"separation\",\n            bind={\n                input=\"checkbox\"\n            },\n            value=false\n        }\n    ]\n)","category":"page"},{"location":"examples/examples_vega_tree_diagrams/#Radial-Tree-Layout-1","page":"Tree Diagrams","title":"Radial Tree Layout","text":"","category":"section"},{"location":"examples/examples_vega_tree_diagrams/#","page":"Tree Diagrams","title":"Tree Diagrams","text":"using Vega, VegaDatasets\n\n@vgplot(\n    height=720,\n    padding=5,\n    marks=[\n        {\n            encode={\n                update={\n                    stroke={\n                        value=\"#ccc\"\n                    },\n                    x={\n                        signal=\"originX\"\n                    },\n                    path={\n                        field=\"path\"\n                    },\n                    y={\n                        signal=\"originY\"\n                    }\n                }\n            },\n            from={\n                data=\"links\"\n            },\n            type=\"path\"\n        },\n        {\n            encode={\n                update={\n                    x={\n                        field=\"x\"\n                    },\n                    fill={\n                        field=\"depth\",\n                        scale=\"color\"\n                    },\n                    y={\n                        field=\"y\"\n                    }\n                },\n                enter={\n                    stroke={\n                        value=\"#fff\"\n                    },\n                    size={\n                        value=100\n                    }\n                }\n            },\n            from={\n                data=\"tree\"\n            },\n            type=\"symbol\"\n        },\n        {\n            encode={\n                update={\n                    align={\n                        signal=\"datum.leftside ? 'right' : 'left'\"\n                    },\n                    x={\n                        field=\"x\"\n                    },\n                    dx={\n                        signal=\"(datum.leftside ? -1 : 1) * 6\"\n                    },\n                    angle={\n                        signal=\"datum.leftside ? datum.angle - 180 : datum.angle\"\n                    },\n                    opacity={\n                        signal=\"labels ? 1 : 0\"\n                    },\n                    y={\n                        field=\"y\"\n                    }\n                },\n                enter={\n                    fontSize={\n                        value=9\n                    },\n                    text={\n                        field=\"name\"\n                    },\n                    baseline={\n                        value=\"middle\"\n                    }\n                }\n            },\n            from={\n                data=\"tree\"\n            },\n            type=\"text\"\n        }\n    ],\n    data=[\n        {\n            name=\"tree\",\n            values=dataset(\"flare\"),\n            transform=[\n                {\n                    key=\"id\",\n                    parentKey=\"parent\",\n                    type=\"stratify\"\n                },\n                {\n                    method={\n                        signal=\"layout\"\n                    },\n                    as=[\n                        \"alpha\",\n                        \"radius\",\n                        \"depth\",\n                        \"children\"\n                    ],\n                    size=[\n                        1,\n                        {\n                            signal=\"radius\"\n                        }\n                    ],\n                    type=\"tree\"\n                },\n                {\n                    as=\"angle\",\n                    expr=\"(rotate + extent * datum.alpha + 270) % 360\",\n                    type=\"formula\"\n                },\n                {\n                    as=\"radians\",\n                    expr=\"PI * datum.angle / 180\",\n                    type=\"formula\"\n                },\n                {\n                    as=\"leftside\",\n                    expr=\"inrange(datum.angle, [90, 270])\",\n                    type=\"formula\"\n                },\n                {\n                    as=\"x\",\n                    expr=\"originX + datum.radius * cos(datum.radians)\",\n                    type=\"formula\"\n                },\n                {\n                    as=\"y\",\n                    expr=\"originY + datum.radius * sin(datum.radians)\",\n                    type=\"formula\"\n                }\n            ]\n        },\n        {\n            name=\"links\",\n            source=\"tree\",\n            transform=[\n                {\n                    type=\"treelinks\"\n                },\n                {\n                    targetX=\"target.radians\",\n                    shape={\n                        signal=\"links\"\n                    },\n                    sourceX=\"source.radians\",\n                    targetY=\"target.radius\",\n                    type=\"linkpath\",\n                    orient=\"radial\",\n                    sourceY=\"source.radius\"\n                }\n            ]\n        }\n    ],\n    scales=[\n        {\n            name=\"color\",\n            zero=true,\n            range={\n                scheme=\"magma\"\n            },\n            domain={\n                data=\"tree\",\n                field=\"depth\"\n            },\n            type=\"linear\"\n        }\n    ],\n    width=720,\n    autosize=\"none\",\n    signals=[\n        {\n            name=\"labels\",\n            bind={\n                input=\"checkbox\"\n            },\n            value=true\n        },\n        {\n            name=\"radius\",\n            bind={\n                max=600,\n                min=20,\n                input=\"range\"\n            },\n            value=280\n        },\n        {\n            name=\"extent\",\n            bind={\n                step=1,\n                max=360,\n                min=0,\n                input=\"range\"\n            },\n            value=360\n        },\n        {\n            name=\"rotate\",\n            bind={\n                step=1,\n                max=360,\n                min=0,\n                input=\"range\"\n            },\n            value=0\n        },\n        {\n            name=\"layout\",\n            bind={\n                options=[\n                    \"tidy\",\n                    \"cluster\"\n                ],\n                input=\"radio\"\n            },\n            value=\"tidy\"\n        },\n        {\n            name=\"links\",\n            bind={\n                options=[\n                    \"line\",\n                    \"curve\",\n                    \"diagonal\",\n                    \"orthogonal\"\n                ],\n                input=\"select\"\n            },\n            value=\"line\"\n        },\n        {\n            name=\"originX\",\n            update=\"width / 2\"\n        },\n        {\n            name=\"originY\",\n            update=\"height / 2\"\n        }\n    ]\n)","category":"page"},{"location":"examples/examples_vega_tree_diagrams/#Treemap-1","page":"Tree Diagrams","title":"Treemap","text":"","category":"section"},{"location":"examples/examples_vega_tree_diagrams/#","page":"Tree Diagrams","title":"Tree Diagrams","text":"using Vega, VegaDatasets\n\n@vgplot(\n    height=500,\n    padding=2.5,\n    marks=[\n        {\n            encode={\n                update={\n                    x2={\n                        field=\"x1\"\n                    },\n                    x={\n                        field=\"x0\"\n                    },\n                    y2={\n                        field=\"y1\"\n                    },\n                    y={\n                        field=\"y0\"\n                    }\n                },\n                enter={\n                    fill={\n                        field=\"name\",\n                        scale=\"color\"\n                    }\n                }\n            },\n            interactive=false,\n            from={\n                data=\"nodes\"\n            },\n            type=\"rect\"\n        },\n        {\n            encode={\n                update={\n                    x2={\n                        field=\"x1\"\n                    },\n                    x={\n                        field=\"x0\"\n                    },\n                    y2={\n                        field=\"y1\"\n                    },\n                    fill={\n                        value=\"transparent\"\n                    },\n                    y={\n                        field=\"y0\"\n                    }\n                },\n                hover={\n                    fill={\n                        value=\"red\"\n                    }\n                },\n                enter={\n                    stroke={\n                        value=\"#fff\"\n                    }\n                }\n            },\n            from={\n                data=\"leaves\"\n            },\n            type=\"rect\"\n        },\n        {\n            encode={\n                update={\n                    x={\n                        signal=\"0.5 * (datum.x0 + datum.x1)\"\n                    },\n                    y={\n                        signal=\"0.5 * (datum.y0 + datum.y1)\"\n                    }\n                },\n                enter={\n                    fillOpacity={\n                        field=\"depth\",\n                        scale=\"opacity\"\n                    },\n                    font={\n                        value=\"Helvetica Neue, Arial\"\n                    },\n                    fontSize={\n                        field=\"depth\",\n                        scale=\"size\"\n                    },\n                    fill={\n                        value=\"#000\"\n                    },\n                    baseline={\n                        value=\"middle\"\n                    },\n                    text={\n                        field=\"name\"\n                    },\n                    align={\n                        value=\"center\"\n                    }\n                }\n            },\n            interactive=false,\n            from={\n                data=\"nodes\"\n            },\n            type=\"text\"\n        }\n    ],\n    data=[\n        {\n            name=\"tree\",\n            values=dataset(\"flare\"),\n            transform=[\n                {\n                    key=\"id\",\n                    parentKey=\"parent\",\n                    type=\"stratify\"\n                },\n                {\n                    method={\n                        signal=\"layout\"\n                    },\n                    sort={\n                        field=\"value\"\n                    },\n                    ratio={\n                        signal=\"aspectRatio\"\n                    },\n                    field=\"size\",\n                    size=[\n                        {\n                            signal=\"width\"\n                        },\n                        {\n                            signal=\"height\"\n                        }\n                    ],\n                    type=\"treemap\",\n                    round=true\n                }\n            ]\n        },\n        {\n            name=\"nodes\",\n            source=\"tree\",\n            transform=[\n                {\n                    expr=\"datum.children\",\n                    type=\"filter\"\n                }\n            ]\n        },\n        {\n            name=\"leaves\",\n            source=\"tree\",\n            transform=[\n                {\n                    expr=\"!datum.children\",\n                    type=\"filter\"\n                }\n            ]\n        }\n    ],\n    scales=[\n        {\n            name=\"color\",\n            range=[\n                \"#3182bd\",\n                \"#6baed6\",\n                \"#9ecae1\",\n                \"#c6dbef\",\n                \"#e6550d\",\n                \"#fd8d3c\",\n                \"#fdae6b\",\n                \"#fdd0a2\",\n                \"#31a354\",\n                \"#74c476\",\n                \"#a1d99b\",\n                \"#c7e9c0\",\n                \"#756bb1\",\n                \"#9e9ac8\",\n                \"#bcbddc\",\n                \"#dadaeb\",\n                \"#636363\",\n                \"#969696\",\n                \"#bdbdbd\",\n                \"#d9d9d9\"\n            ],\n            domain={\n                data=\"nodes\",\n                field=\"name\"\n            },\n            type=\"ordinal\"\n        },\n        {\n            name=\"size\",\n            range=[\n                256,\n                28,\n                20,\n                14\n            ],\n            domain=[\n                0,\n                1,\n                2,\n                3\n            ],\n            type=\"ordinal\"\n        },\n        {\n            name=\"opacity\",\n            range=[\n                0.15,\n                0.5,\n                0.8,\n                1.0\n            ],\n            domain=[\n                0,\n                1,\n                2,\n                3\n            ],\n            type=\"ordinal\"\n        }\n    ],\n    width=960,\n    autosize=\"none\",\n    signals=[\n        {\n            name=\"layout\",\n            bind={\n                options=[\n                    \"squarify\",\n                    \"binary\",\n                    \"slicedice\"\n                ],\n                input=\"select\"\n            },\n            value=\"squarify\"\n        },\n        {\n            name=\"aspectRatio\",\n            bind={\n                step=0.1,\n                max=5,\n                min=1,\n                input=\"range\"\n            },\n            value=1.6\n        }\n    ]\n)","category":"page"},{"location":"examples/examples_vega_tree_diagrams/#Circle-Packing-1","page":"Tree Diagrams","title":"Circle Packing","text":"","category":"section"},{"location":"examples/examples_vega_tree_diagrams/#","page":"Tree Diagrams","title":"Tree Diagrams","text":"using Vega, VegaDatasets\n\n@vgplot(\n    height=600,\n    padding=5,\n    marks=[\n        {\n            encode={\n                update={\n                    stroke={\n                        value=\"white\"\n                    },\n                    x={\n                        field=\"x\"\n                    },\n                    strokeWidth={\n                        value=0.5\n                    },\n                    size={\n                        signal=\"4 * datum.r * datum.r\"\n                    },\n                    y={\n                        field=\"y\"\n                    }\n                },\n                hover={\n                    stroke={\n                        value=\"red\"\n                    },\n                    strokeWidth={\n                        value=2\n                    }\n                },\n                enter={\n                    shape={\n                        value=\"circle\"\n                    },\n                    tooltip={\n                        signal=\"datum.name + (datum.size ? ', ' + datum.size + ' bytes' : '')\"\n                    },\n                    fill={\n                        field=\"depth\",\n                        scale=\"color\"\n                    }\n                }\n            },\n            from={\n                data=\"tree\"\n            },\n            type=\"symbol\"\n        }\n    ],\n    data=[\n        {\n            name=\"tree\",\n            values=dataset(\"flare\"),\n            transform=[\n                {\n                    key=\"id\",\n                    parentKey=\"parent\",\n                    type=\"stratify\"\n                },\n                {\n                    sort={\n                        field=\"value\"\n                    },\n                    field=\"size\",\n                    size=[\n                        {\n                            signal=\"width\"\n                        },\n                        {\n                            signal=\"height\"\n                        }\n                    ],\n                    type=\"pack\"\n                }\n            ]\n        }\n    ],\n    scales=[\n        {\n            name=\"color\",\n            range={\n                scheme=\"category20\"\n            },\n            domain={\n                data=\"tree\",\n                field=\"depth\"\n            },\n            type=\"ordinal\"\n        }\n    ],\n    width=600,\n    autosize=\"none\"\n)","category":"page"},{"location":"examples/examples_vega_tree_diagrams/#Sunburst-1","page":"Tree Diagrams","title":"Sunburst","text":"","category":"section"},{"location":"examples/examples_vega_tree_diagrams/#","page":"Tree Diagrams","title":"Tree Diagrams","text":"using Vega, VegaDatasets\n\n@vgplot(\n    height=600,\n    padding=5,\n    marks=[\n        {\n            encode={\n                update={\n                    innerRadius={\n                        field=\"r0\"\n                    },\n                    startAngle={\n                        field=\"a0\"\n                    },\n                    stroke={\n                        value=\"white\"\n                    },\n                    endAngle={\n                        field=\"a1\"\n                    },\n                    outerRadius={\n                        field=\"r1\"\n                    },\n                    strokeWidth={\n                        value=0.5\n                    },\n                    zindex={\n                        value=0\n                    }\n                },\n                hover={\n                    stroke={\n                        value=\"red\"\n                    },\n                    strokeWidth={\n                        value=2\n                    },\n                    zindex={\n                        value=1\n                    }\n                },\n                enter={\n                    tooltip={\n                        signal=\"datum.name + (datum.size ? ', ' + datum.size + ' bytes' : '')\"\n                    },\n                    x={\n                        signal=\"width / 2\"\n                    },\n                    fill={\n                        field=\"depth\",\n                        scale=\"color\"\n                    },\n                    y={\n                        signal=\"height / 2\"\n                    }\n                }\n            },\n            from={\n                data=\"tree\"\n            },\n            type=\"arc\"\n        }\n    ],\n    data=[\n        {\n            name=\"tree\",\n            values=dataset(\"flare\"),\n            transform=[\n                {\n                    key=\"id\",\n                    parentKey=\"parent\",\n                    type=\"stratify\"\n                },\n                {\n                    sort={\n                        field=\"value\"\n                    },\n                    field=\"size\",\n                    as=[\n                        \"a0\",\n                        \"r0\",\n                        \"a1\",\n                        \"r1\",\n                        \"depth\",\n                        \"children\"\n                    ],\n                    size=[\n                        {\n                            signal=\"2 * PI\"\n                        },\n                        {\n                            signal=\"width / 2\"\n                        }\n                    ],\n                    type=\"partition\"\n                }\n            ]\n        }\n    ],\n    scales=[\n        {\n            name=\"color\",\n            range={\n                scheme=\"tableau20\"\n            },\n            domain={\n                data=\"tree\",\n                field=\"depth\"\n            },\n            type=\"ordinal\"\n        }\n    ],\n    width=600,\n    autosize=\"none\"\n)","category":"page"}]
}
